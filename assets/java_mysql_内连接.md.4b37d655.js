import{_ as a,o as s,c as e,V as n}from"./chunks/framework.364d6ed5.js";const u=JSON.parse('{"title":"内连接","description":"","frontmatter":{"title":"内连接","date":"2022-09-20T23:10:20.000Z","permalink":"/pages/9fa60d/","categories":["java","mysql"],"tags":[null]},"headers":[],"relativePath":"java/mysql/内连接.md","filePath":"java/mysql/内连接.md","lastUpdated":1705322256000}'),l={name:"java/mysql/内连接.md"},o=n(`<h1 id="内连接inner-join" tabindex="-1">内连接INNER JOIN <a class="header-anchor" href="#内连接inner-join" aria-label="Permalink to &quot;内连接INNER JOIN&quot;">​</a></h1><p><code>MySQ</code>L中的内连接（<code>INNER JOIN</code>）和外连接（包括<code>LEFT JOIN</code>、<code>RIGHT JOIN</code>、<code>FULL OUTER JOIN</code>）是用于从两个或多个表中获取数据的不同方式，它们之间的主要区别在于结果集中包含哪些记录。</p><p>内连接返回的是两个表中在连接条件上匹配的行的集合。换句话说，只有当两个表的相关列上的值相匹配时，才会出现在结果集中。</p><div class="language-sql line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> column1, column2...</span></span>
<span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> table1</span></span>
<span class="line"><span style="color:#F78C6C;">INNER JOIN</span><span style="color:#A6ACCD;"> table2</span></span>
<span class="line"><span style="color:#F78C6C;">ON</span><span style="color:#A6ACCD;"> table1.column </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> table2.column;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,4),t=[o];function p(c,r,i,d,_,m){return s(),e("div",null,t)}const N=a(l,[["render",p]]);export{u as __pageData,N as default};
