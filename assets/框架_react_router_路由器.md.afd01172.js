import{_ as s,o as a,c as l,V as n}from"./chunks/framework.364d6ed5.js";const d=JSON.parse('{"title":"路由器","description":"","frontmatter":{"title":"路由器","date":"2021-09-27T16:03:13.000Z","permalink":"/pages/401858/","categories":["框架","react_router"],"tags":[null]},"headers":[],"relativePath":"框架/react_router/路由器.md","filePath":"框架/react_router/路由器.md","lastUpdated":1685623283000}'),o={name:"框架/react_router/路由器.md"},e=n(`<h2 id="browserouter" tabindex="-1">BrowseRouter <a class="header-anchor" href="#browserouter" aria-label="Permalink to &quot;BrowseRouter&quot;">​</a></h2><p>使用 HTML5 的 history API(pushState,replaceState,popState)，让页面的 UI 跟 URL 同步。有有以下几个属性:</p><ul><li><ol><li>basename : URL 的基础路径，<code>string</code> 类型，可选</li></ol></li></ul><p>假如你需要把页面部署到服务器的二级目录，你可以使用 basename 设置到此目录。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">BrowserRouter</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">basename</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/calendar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Link</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">to</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/today</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span><span style="color:#A6ACCD;"> // renders </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/calendar/today</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Link</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">to</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/tomorrow</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span><span style="color:#A6ACCD;"> // renders </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/calendar/tomorrow</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  ...</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">BrowserRouter</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><ol start="2"><li>forceRefresh : 路由跳转的时候是否强制刷新，<code>boolean</code> 类型，默认 <code>false</code></li></ol></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">BrowserRouter</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">forceRefresh</span><span style="color:#89DDFF;">={</span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">} /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><ol start="3"><li>getUserConfirmation : 用来确认路由是否跳转，<code>Function 类型</code>，默认使用 <code>window.confirm</code></li></ol></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">BrowserRouter</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">getUserConfirmation</span><span style="color:#89DDFF;">={(</span><span style="color:#A6ACCD;font-style:italic;">message</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">callback</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// this is the default behavior</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">allowTransition</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">confirm</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">message</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">callback</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">allowTransition</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}}</span></span>
<span class="line"><span style="color:#89DDFF;">/&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li><ol start="4"><li>keyLength : <code>location.key</code>的长度，默认值是 6，<code>Number</code>类型</li></ol></li></ul><p>点击同一个链接时，<code>location.key</code>都会改变</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">BrowserRouter</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">keyLength</span><span style="color:#89DDFF;">={</span><span style="color:#F78C6C;">12</span><span style="color:#89DDFF;">} /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="hashrouter" tabindex="-1">HashRouter <a class="header-anchor" href="#hashrouter" aria-label="Permalink to &quot;HashRouter&quot;">​</a></h2><p><code>HashRouter</code> 使用的是 <code>URL</code> 的 <code>hash</code> 部分（既 window.location.hash），来保持页面的 UI 同 URL 的同步。哈希记录不支持<code>location.key</code>或<code>location.state</code>。次技术仅用于支持旧版本浏览器，鼓励使用 <code>BrowserHistroy</code>。它有一下几个属性:</p><ul><li><ol><li>basename : 同 BrowserHistroy 的 basename</li></ol></li><li><ol start="2"><li>getUserConfirmation : 同 BrowserHistroy 的 getUserConfirmation</li></ol></li><li><ol start="3"><li>hasyType : 用于 window.location.hash 的编码类型，<code>string</code>类型，可取值为:</li></ol><ul><li><ol><li>slash : #/</li></ol></li><li><ol start="2"><li>noslash : #</li></ol></li><li><ol start="3"><li>hashbang: #!</li></ol></li></ul></li></ul><p>默认值为 : slash</p><h3 id="browserrouter-和-hashrouter-对比" tabindex="-1">BrowserRouter 和 HashRouter 对比 <a class="header-anchor" href="#browserrouter-和-hashrouter-对比" aria-label="Permalink to &quot;BrowserRouter 和 HashRouter 对比&quot;">​</a></h3><ul><li><ol><li>URL 的表现形式不一样</li></ol></li></ul><p>从页面的地址栏中可以看出 HashRouter 是包含#号的，而 BrowerRouter 是不包含#号的</p><ul><li><ol start="2"><li>路由跳转方式不一样</li></ol></li></ul><p>BrowserRouter 使用 HTML5 的 history API(pushState，popState，replaceState)，保证 UI 界面和 URL 同步，HashRouter 使用 URL 的哈希部分(location.hash，location.replace)来保持 UI 和 URL 的同步。</p><ul><li><ol start="3"><li>HashRouter 不支持 location.state 和 location.key</li></ol></li><li><ol start="4"><li>BrowerRouter 的开启需要后端配置的，类似于 Vue 中的 history 模式。HashRouter 类型于 Vue 中的 hash 模式</li></ol></li></ul><h2 id="memoryrouter" tabindex="-1">MemoryRouter <a class="header-anchor" href="#memoryrouter" aria-label="Permalink to &quot;MemoryRouter&quot;">​</a></h2><p>能在内存中保存你的<code>URL</code>的历史记录（并不会对地址栏进行读写）。很适合在测试环境和非浏览器环境中使用。例如 React Native。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">MemoryRouter</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">initialEntries</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;">optionalArray</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">initialIndex</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;">optionalNumber</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">getUserConfirmation</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;">optionalFunc</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">keyLength</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;">optionalNumber</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">App</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">MemoryRouter</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>有以下几个属性:</p><ul><li><ol><li>initialEntries ： 数组类型。history 栈中的一个 location 数组。这些可能具有{pathname，search，hash，state}或简单的 URL 字符串的完整地址对象。</li></ol></li><li><ol start="2"><li>initialIndex : Number 类型。在 initialEntries 数组中点初始化地址索引。</li></ol></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">MemoryRouter</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">initialEntries</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/one</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/two</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">pathname</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/three</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">initialIndex</span><span style="color:#89DDFF;">={</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">App</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">MemoryRouter</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li><ol start="3"><li>keyLength ： Number 类型。设置 <code>location.key</code>的长度。默认是 6</li></ol></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">MemoryRouter</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">keyLength</span><span style="color:#89DDFF;">={</span><span style="color:#F78C6C;">12</span><span style="color:#89DDFF;">} /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><ol start="4"><li>getUserConfirmation : 函数类型。用于 confirm 导航</li></ol></li></ul><h2 id="nativerouter" tabindex="-1">NativeRouter <a class="header-anchor" href="#nativerouter" aria-label="Permalink to &quot;NativeRouter&quot;">​</a></h2><p>一个用 React Native 为 IOS 和安卓构建的 Router</p><h2 id="staticrouter" tabindex="-1">StaticRouter <a class="header-anchor" href="#staticrouter" aria-label="Permalink to &quot;StaticRouter&quot;">​</a></h2><p>StaticRouter 是用来做服务端渲染的。服务端渲染的时候路由是无状态的，所以要用 StaticRouter，而 BrowserRouter 使用 HTML5 提供的 history API (pushState, replaceState 和 popstate 事件) 来保持 UI 和 URL 的同步。</p>`,35),p=[e];function t(r,c,i,F,y,D){return a(),l("div",null,p)}const h=s(o,[["render",t]]);export{d as __pageData,h as default};
