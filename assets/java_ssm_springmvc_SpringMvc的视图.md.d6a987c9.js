import{_ as s,o as n,c as a,V as e}from"./chunks/framework.364d6ed5.js";const g=JSON.parse('{"title":"SpringMvc的视图","description":"","frontmatter":{"title":"SpringMvc的视图","date":"2022-10-14T22:07:56.000Z","permalink":"/pages/88d6e5/","categories":["java","ssm","springmvc"],"tags":[null]},"headers":[],"relativePath":"java/ssm/springmvc/SpringMvc的视图.md","filePath":"java/ssm/springmvc/SpringMvc的视图.md","lastUpdated":1685806707000}'),o={name:"java/ssm/springmvc/SpringMvc的视图.md"},l=e(`<h1 id="springmvc的视图" tabindex="-1">SpringMvc的视图 <a class="header-anchor" href="#springmvc的视图" aria-label="Permalink to &quot;SpringMvc的视图&quot;">​</a></h1><h2 id="_1-简介" tabindex="-1">1. 简介 <a class="header-anchor" href="#_1-简介" aria-label="Permalink to &quot;1. 简介&quot;">​</a></h2><p><code>SpringMVC</code> 中的视图是 <code>View</code> 接口，视图的作用是<strong>渲染数据</strong>，将模型 <code>Model</code> 中的数据展示给用户。<code>SpringMVC</code> 视图的种类很多，<strong>默认</strong>有<strong>转发视图</strong>和<strong>重定向视图</strong>。</p><p>当工程引入<code>jstl</code> 的依赖，转发视图会自动转换为 <code>JstlView</code>。</p><p>若使用的视图技术为 <code>Thymeleaf</code>，在 <code>SpringMVC</code> 的配置文件中配置了 <code>Thymeleaf</code> 的<strong>视图解析器</strong>，由此视 图解析器解析之后所得到的是 <code>ThymeleafView</code></p><h2 id="_2-thymeleafview" tabindex="-1">2. ThymeleafView <a class="header-anchor" href="#_2-thymeleafview" aria-label="Permalink to &quot;2. ThymeleafView&quot;">​</a></h2><p>当<strong>控制器方法</strong>中所设置的<strong>视图名称没有</strong>任何<strong>前缀</strong>时，此时的<strong>视图名称</strong>会被 <code>SpringMVC</code>配置文件中所配置的<strong>视图解析器</strong>解析，视图名称拼接视图前缀和视图后缀所得到的最终路径，会通过<strong>转发</strong>的方式实现<strong>跳转</strong>。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TestViewController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/test/view/thymeleaf</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testThymeleafView</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_3-转发视图" tabindex="-1">3. 转发视图 <a class="header-anchor" href="#_3-转发视图" aria-label="Permalink to &quot;3. 转发视图&quot;">​</a></h2><p><code>SpringMVC</code> 中<strong>默认</strong>的<strong>转发视图</strong>是 <code>InternalResourceView</code>。<code>SpringMVC</code>中创建转发视图的情况：</p><p>当控制器方法中所设置的视图名称以<code>forward:</code>为前缀时，创建 <code>InternalResourceView</code> 视图，此时的视 图名称不会被 <code>SpringMVC</code> 配置文件中所配置的视图解析器解析，而是会将前缀<code>forward:</code>去掉，剩余部 分作为最终路径通过<strong>转发</strong>的方式实现跳转。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ProtalController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testPojo</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">user</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">forward:/hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_4-重定向视图" tabindex="-1">4. 重定向视图 <a class="header-anchor" href="#_4-重定向视图" aria-label="Permalink to &quot;4. 重定向视图&quot;">​</a></h2><p><code>SpringMVC</code> 中默认的重定向视图是 <code>RedirectView</code>。</p><p>当控制器方法中所设置的视图名称以<code>redirect:</code>为前缀时，创建 <code>RedirectView</code>视图，此时的视图名称不 会被 <code>SpringMVC</code> 配置文件中所配置的视图解析器解析，而是会将前缀<code>redirect:</code>去掉，剩余部分作为最 终路径通过<strong>重定向</strong>的方式实现跳转。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/testRedirect</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testRedirect</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">redirect:/testHello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>重定向视图在解析时，会先将 <code>redirect:</code>前缀去掉，然后会判断剩余部分是否以/开头，若是则会自 动拼接上下文路径</p><h2 id="_5-视图控制器" tabindex="-1">5. 视图控制器 <a class="header-anchor" href="#_5-视图控制器" aria-label="Permalink to &quot;5. 视图控制器&quot;">​</a></h2><h3 id="_1-概念" tabindex="-1">1.概念 <a class="header-anchor" href="#_1-概念" aria-label="Permalink to &quot;1.概念&quot;">​</a></h3><p>目前我们是通过，在控制器方法返回视图名称的方式实现网页的访问。这种方式需要手写代码。除了这种方法，我们还有一种不屑代码，直接配置的方式，那就是<strong>视图控制器</strong>。 我们可以在<code>SpringMvc</code>的配置文件，配置<strong>视图控制器</strong>。</p><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">view-controller</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">path</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/testView</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">view-name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">view-controller</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><ol><li>path：设置处理的<strong>请求地址</strong></li></ol></li><li><ol start="2"><li>view-name：设置请求地址所对应的<strong>视图名称</strong></li></ol></li></ul><p>此时我们就可以在浏览器访问<code>/testView</code>了。</p><h3 id="_2-注意事项" tabindex="-1">2. 注意事项 <a class="header-anchor" href="#_2-注意事项" aria-label="Permalink to &quot;2. 注意事项&quot;">​</a></h3><p>当 <code>SpringMVC</code>中设置任何一个 <code>view-controller</code> 时，其他<strong>控制器</strong>中的<strong>请求映射</strong>将全部<strong>失效</strong>，此时需 要在 <code>SpringMVC</code> 的核心配置文件中设置开启<code>mvc</code> <strong>注解驱动</strong>的标签：<code>&lt;mvc:annotation-driven /&gt;</code></p><h3 id="_3-什么时候使用视图控制器" tabindex="-1">3. 什么时候使用视图控制器 <a class="header-anchor" href="#_3-什么时候使用视图控制器" aria-label="Permalink to &quot;3. 什么时候使用视图控制器&quot;">​</a></h3><p>当控制器方法中，<strong>仅仅</strong>用来实现<strong>页面跳转</strong>，（如，<code>404页面</code>,<code>500页面</code>等）即只需要设置视图名称时。我们就不需要再去写控制器方法了， 可是配置<strong>视图控制器</strong>来实现页面跳转。</p>`,27),p=[l];function r(t,c,i,d,D,y){return n(),a("div",null,p)}const C=s(o,[["render",r]]);export{g as __pageData,C as default};
