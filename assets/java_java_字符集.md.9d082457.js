import{_ as s,o as a,c as n,V as o}from"./chunks/framework.364d6ed5.js";const e="/./ascII.png",C=JSON.parse('{"title":"字符集","description":"","frontmatter":{},"headers":[],"relativePath":"java/java/字符集.md","filePath":"java/java/字符集.md","lastUpdated":1703843466000}'),l={name:"java/java/字符集.md"},t=o('<h1 id="字符集" tabindex="-1">字符集 <a class="header-anchor" href="#字符集" aria-label="Permalink to &quot;字符集&quot;">​</a></h1><h2 id="_1-常用字符集" tabindex="-1">1.常用字符集 <a class="header-anchor" href="#_1-常用字符集" aria-label="Permalink to &quot;1.常用字符集&quot;">​</a></h2><h3 id="_1-标准ascii字符集" tabindex="-1">1. 标准ASCII字符集 <a class="header-anchor" href="#_1-标准ascii字符集" aria-label="Permalink to &quot;1. 标准ASCII字符集&quot;">​</a></h3><img src="'+e+`"><p>美国人发明了计算机，他们要把他们国家的字符（如：英文字母，数字，标点符号，特殊字符。一共<code>28</code>个）存储到计算机。但是这些字符是不能直接存储到计算机，因为计算机只能存储<code>0</code>和<code>1</code>这些二进制数据。为了让计算机能够存储这些字符， 美国人将这些字符进行编号(<code>10</code>进制)，从<code>0</code>编到<code>127</code>，这些编号我们称之为<strong>码点</strong>，每个字符都会对应一个唯一<strong>码点</strong>。这些字符和码点就叫做<code>ASCII</code>字符集。</p><p>然后对<strong>码点</strong>进行<strong>编码</strong>，将这些<strong>码点</strong>转化成<strong>二进制</strong>表示，计算机底层最小存储<strong>一个字节</strong>，一个字节有<code>8bit</code>，表示的<code>10</code>进制远大于<code>127</code>。故<code>ASCII</code>字符集使用<strong>一个字节</strong>存储<strong>码点</strong>。码点转化成二进制后，不满住<code>8bit</code>则进行补<code>0</code>。</p><ul><li><ol><li><code>ASCII(American Standard Code for lnformation lnterchange)</code>: 美国信息交换标准代码，包括英文，数字，标点符号，特殊字符。</li></ol></li><li><ol start="2"><li>标准<code>ASCII</code>使用<strong>1个字节</strong>存储一个字符，首位是<code>0</code>,总共可表示<code>128</code>个字符。对美国佬来说完全够用。</li></ol></li></ul><h3 id="_2-gbk字符集" tabindex="-1">2. GBK字符集 <a class="header-anchor" href="#_2-gbk字符集" aria-label="Permalink to &quot;2. GBK字符集&quot;">​</a></h3><p><code>GBK</code>字符集中文叫做<strong>汉字内码扩展规范</strong>，又<strong>称国标</strong>。</p><ul><li><ol><li>汉字编码字符集，包含了<code>2万</code>多个汉字等字符，<code>GBK</code>中一个中文字符编码成<strong>两个字节</strong>的形式存储。</li></ol></li><li><ol start="2"><li><code>GBK</code>兼容了<code>ASCII</code>字符集。（英文字符跟<code>ASCII</code>一样使用一个字节）</li></ol></li><li><ol start="3"><li><code>GBK</code>规定： 汉字的第一个字节的第一位必须是<code>1</code>。（<code>ASCII</code>字符集字节首位是<code>0</code>,所以利用这个规则可以解码汉字和字母的混合）</li></ol></li></ul><h3 id="_3-unicode字符集" tabindex="-1">3. Unicode字符集 <a class="header-anchor" href="#_3-unicode字符集" aria-label="Permalink to &quot;3. Unicode字符集&quot;">​</a></h3><p><code>Unicode</code>字符集被称为<strong>统一码</strong>，也叫<strong>万国码</strong>。</p><p>美国人使用<code>ASCII</code>，中国人使用<code>GBK</code>,其他国家也可以给自己弄一套字符集。这样就会产生很多字符集。这样一来计算机在全世界信息互传的时候，由于使用的字符集不同会导致乱码。为了解决这一问题，国际组织收集了全世界所有的字符和符号，统一进行编码。这套字符集就叫做<code>Unicode</code>字符集。</p><p><code>Unicode</code>字符集提供了广泛的字符支持，适用于多种语言和文化。它支持几乎所有的字符，包括各种语言的字母，标点符号，数学符号，货币符号，表情符号等。<code>Unicode</code>字符集也可以使用不同的编码方式来表示字符：</p><h4 id="_1-utf-8编码" tabindex="-1">1. <code>UTF-8</code>编码 <a class="header-anchor" href="#_1-utf-8编码" aria-label="Permalink to &quot;1. \`UTF-8\`编码&quot;">​</a></h4><p><code>UTF-8</code>是一种可变长编码，它使用<code>1</code>到<code>4</code>个字节来表示不同的<code>Unicode</code>字符。<code>UTF-8</code>编码可以表示<code>Unicode</code>字符集中的所有字符，包括<code>ASCII</code>字符集。它在存储和传输文本数据是非常有用，因为它可以节省空间并兼容<code>ASCII</code>编码。</p><h4 id="_2-utf-16编码" tabindex="-1">2. <code>UTF-16</code>编码 <a class="header-anchor" href="#_2-utf-16编码" aria-label="Permalink to &quot;2. \`UTF-16\`编码&quot;">​</a></h4><p><code>UTF-16</code>是一种定长或变长编码，它使用<code>2</code>个字节或<code>4</code>个字节来表示<code>Unicode</code>字符。可以表示<code>Unicode</code>字符集中的所有字符，主要用于<code>Windows</code>操作系统和一些旧的编程环境。</p><h4 id="_3-utf-32编码" tabindex="-1">3. <code>UTF-32</code>编码 <a class="header-anchor" href="#_3-utf-32编码" aria-label="Permalink to &quot;3. \`UTF-32\`编码&quot;">​</a></h4><p><code>UTF-32</code>编码使用<code>4个字节</code>表示一个字符，太占存储空间，通信效率变低。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><ol><li><code>Unicode</code>和<code>UTF-8</code>的关系 ： <code>UTF-8</code>是<code>Unicode</code>的一种实现方式，用于对字符进行可变长度的编码。能表示<code>Unicode</code>字符集中的所有字符。推荐使用<code>UTF-8</code></li></ol></li><li><ol start="2"><li><code>ASCII</code>字符集 ： 只有英文，数字，符号等，占<code>1</code>个字节</li></ol></li><li><ol start="3"><li><code>GBK</code>字符集 ： 汉字占<code>2</code>个字节，英文和数字占<code>1</code>个字节</li></ol></li><li><ol start="4"><li><code>UTF-8</code>字符集 ： 汉字占<code>3</code>个字节，英文和数字占<code>1</code>个字节</li></ol></li></ul></div><h2 id="_2-编码和解码" tabindex="-1">2. 编码和解码 <a class="header-anchor" href="#_2-编码和解码" aria-label="Permalink to &quot;2. 编码和解码&quot;">​</a></h2><h3 id="_1-概念" tabindex="-1">1. 概念 <a class="header-anchor" href="#_1-概念" aria-label="Permalink to &quot;1. 概念&quot;">​</a></h3><ul><li><ol><li>编码 ： 把<strong>字符</strong>按照指定字符集编码成<strong>字节</strong></li></ol></li><li><ol start="2"><li>解码 ： 把<strong>字节</strong>按照指定字符集解码成<strong>字符</strong></li></ol></li></ul><h3 id="_2-java实现对字符编码" tabindex="-1">2. java实现对字符编码 <a class="header-anchor" href="#_2-java实现对字符编码" aria-label="Permalink to &quot;2. java实现对字符编码&quot;">​</a></h3><h4 id="_1-编码" tabindex="-1">1. 编码 <a class="header-anchor" href="#_1-编码" aria-label="Permalink to &quot;1. 编码&quot;">​</a></h4><p><code>Java.lang</code>包下的<code>String</code>类提供了<code>getBytes()</code>方法对字符进行<strong>编码</strong> ：</p><table><thead><tr><th style="text-align:center;">方法</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>byte[] getBytes()</code></td><td style="text-align:center;">使用平台的默认字符集将该字符串编码为一系列字节，将结果存储到新的字节数组中</td></tr><tr><td style="text-align:center;"><code>byte[] getBytes(String charsetName)</code></td><td style="text-align:center;">使用指定字符集将该字符串编码为一系列字节，将结果存储到新的字节数组中</td></tr></tbody></table><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Test</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//1. 编码</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a我b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#C792EA;">byte</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> bytes </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getBytes</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">StandardCharsets</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">UTF_8</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">//按照UTF-8进行编码</span></span>
<span class="line"><span style="color:#A6ACCD;">       System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Arrays</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">bytes</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#676E95;font-style:italic;">// [97, -26, -120, -111, 98]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>UTF-8</code> 汉字占三个字节，英文字母占一个字母。所以字符串<code>a我b</code>的字节数组长度为<code>5</code>，表示<code>a</code>占<code>1</code>个字节，<code>我</code>占<code>3</code>个字节，<code>b</code>占<code>1</code>个字节。</p><h4 id="_2-解码" tabindex="-1">2. 解码 <a class="header-anchor" href="#_2-解码" aria-label="Permalink to &quot;2. 解码&quot;">​</a></h4><p><code>Java.lang</code>包下的<code>String</code>类提供了<code>String()</code>构造方法对字节进行<strong>解码</strong> ：</p><table><thead><tr><th style="text-align:center;">方法</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>String(byte[] bytes)</code></td><td style="text-align:center;">通过使用平台默认字符集解码指定的字节数组来构造新的字符串<code>String</code></td></tr><tr><td style="text-align:center;"><code>String(byte[] bytes, String charsetName)</code></td><td style="text-align:center;">使用指定的字符集解码指定的字节数组来构造新的字符串<code>String</code></td></tr></tbody></table><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Test</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 1. 编码</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a我b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">byte</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> bytes </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getBytes</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">StandardCharsets</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">UTF_8</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">//按照UTF-8进行编码</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Arrays</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">bytes</span><span style="color:#89DDFF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 2. 解码</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> str2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">String</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">bytes</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">StandardCharsets</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">UTF_8</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">str2</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// [97, -26, -120, -111, 98]</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// a我b</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><ol><li>字符编码时使用的字符集，和解码是使用的字符集必须一致，否则会出现乱码</li></ol></li><li><ol start="2"><li>英文和数字一般不会乱码，因为很多字符集都兼容了<code>ASCII</code>码</li></ol></li></ul></div>`,35),c=[t];function p(r,d,i,y,D,A){return a(),n("div",null,c)}const b=s(l,[["render",p]]);export{C as __pageData,b as default};
