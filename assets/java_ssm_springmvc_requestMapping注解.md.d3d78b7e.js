import{_ as s,o as a,c as n,V as l}from"./chunks/framework.364d6ed5.js";const u=JSON.parse('{"title":"requestMapping注解","description":"","frontmatter":{"title":"requestMapping注解","date":"2022-10-13T14:24:51.000Z","permalink":"/pages/1c3e6c/","categories":["java","ssm","springmvc"],"tags":[null]},"headers":[],"relativePath":"java/ssm/springmvc/requestMapping注解.md","filePath":"java/ssm/springmvc/requestMapping注解.md","lastUpdated":1685806707000}'),o={name:"java/ssm/springmvc/requestMapping注解.md"},e=l(`<h1 id="requestmapping注解" tabindex="-1">requestMapping注解 <a class="header-anchor" href="#requestmapping注解" aria-label="Permalink to &quot;requestMapping注解&quot;">​</a></h1><h2 id="_1-requestmapping-注解的功能" tabindex="-1">1. @RequestMapping 注解的功能 <a class="header-anchor" href="#_1-requestmapping-注解的功能" aria-label="Permalink to &quot;1. @RequestMapping 注解的功能&quot;">​</a></h2><p>从注解名称上我们可以看到，<code>@RequestMapping</code>注解的作用就是<strong>将请求</strong>和处理请求的<strong>控制器方法</strong>关联 起来，<strong>建立映射</strong>关系。</p><p><code>SpringMVC</code> 接收到指定的请求，就会来找到在<strong>映射关系</strong>中对应的<strong>控制器方法</strong>来处理这个请求。</p><h2 id="_2-requestmapping-注解的位置" tabindex="-1">2. @RequestMapping 注解的位置 <a class="header-anchor" href="#_2-requestmapping-注解的位置" aria-label="Permalink to &quot;2. @RequestMapping 注解的位置&quot;">​</a></h2><ul><li><ol><li>@RequestMapping 标识一个<strong>类</strong>：设置映射请求的请求路径的初始信息</li></ol></li><li><ol start="2"><li>@RequestMapping 标识一个<strong>方法</strong>：设置映射请求请求路径的具体信息</li></ol></li></ul><p>既<code>@RequestMapping</code>注解可以加在<strong>类上</strong>，也可以加在<strong>方法上</strong>，完成的访问地址就是<strong>类上的地址拼接上方法上的地址</strong></p><p>此时请求映射所映射的请求的请求路径为：<code>/test/testRequestMapping</code></p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">RequestMappingController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/testRequestMapping</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testRequestMapping</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="_3-requestmapping-注解的属性" tabindex="-1">3. @RequestMapping 注解的属性 <a class="header-anchor" href="#_3-requestmapping-注解的属性" aria-label="Permalink to &quot;3. @RequestMapping 注解的属性&quot;">​</a></h2><h3 id="_3-1-value-属性" tabindex="-1">3. 1 value 属性 <a class="header-anchor" href="#_3-1-value-属性" aria-label="Permalink to &quot;3. 1 value 属性&quot;">​</a></h3><blockquote><p>作用 ： <code>@RequestMapping</code> 注解的 <code>value</code> 属性通过请求的<strong>请求地址</strong>匹配请求映射。</p></blockquote><p><code>@RequestMapping</code>注解的<code>value</code>属性的值是<strong>请求映射地址</strong>，用来匹配<strong>浏览器或接口请求地址</strong>，其值可以是<strong>字符串</strong>，也可以是<strong>数组</strong>（表示改请求映射地址能够匹配多个请求地址所对应的请求）。</p><p><code>@RequestMapping</code>注解的<code>value</code>属性必须设置。当有一个值的时候，可以简写。</p><ul><li><ol><li>value 值是字符串</li></ol></li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ProtalController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">value</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">protral</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li><ol start="2"><li>value 值简写</li></ol></li></ul><p>当有一个值的时候，可以简写</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ProtalController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">protral</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li><ol start="3"><li>value 值是一个数组</li></ol></li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ProtalController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">value</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/home</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/index</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">protral</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_3-2-method-属性" tabindex="-1">3.2 method 属性 <a class="header-anchor" href="#_3-2-method-属性" aria-label="Permalink to &quot;3.2 method 属性&quot;">​</a></h3><blockquote><p>作用 ： <code>@RequestMapping</code> 注解的 <code>method</code> 属性通过请求的<strong>请求方式</strong>（如<code>get</code> ，<code>post</code>）匹配请求映射。</p></blockquote><p><code>@RequestMapping</code> 注解的<code>method</code> 属性是一个 <code>RequestMethod</code> 类型的数组，表示该请求映射能够匹配 多种请求方式的请求</p><p>若当前请求的请求<strong>地址满足</strong>请求映射的 <code>value</code> 属性，但是<strong>请求方式不满足</strong> <code>method</code> 属性，则浏览器报错 <code>405：Request method &#39;POST&#39; not supported</code></p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ProtalController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">value</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/home</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span><span style="color:#FFCB6B;">method</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;"> RequestMethod</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">GET</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">protral</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="requestmapping-派生注解" tabindex="-1">@RequestMapping 派生注解 <a class="header-anchor" href="#requestmapping-派生注解" aria-label="Permalink to &quot;@RequestMapping 派生注解&quot;">​</a></h4><p>对于处理指定请求方式的控制器方法，<code>SpringMVC</code> 中提供了<code>@RequestMapping</code>的派生注解</p><ul><li><ol><li>处理 get 请求的映射 : <code>@GetMapping</code></li></ol></li><li><ol start="2"><li>处理 post 请求的映射:<code>@PostMapping</code></li></ol></li><li><ol start="3"><li>处理 put 请求的映射:<code>@PutMapping</code></li></ol></li><li><ol start="4"><li>处理 delete 请求的映射:<code>@DeleteMapping</code></li></ol></li></ul><p>如：</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ProtalController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">GetMapping</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">value</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/home</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">protral</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="常用的请求方式有-get-post-put-delete" tabindex="-1">常用的请求方式有 get，post，put，delete <a class="header-anchor" href="#常用的请求方式有-get-post-put-delete" aria-label="Permalink to &quot;常用的请求方式有 get，post，put，delete&quot;">​</a></h4><p>但是目前浏览器只支持 <code>get</code> 和 <code>post</code>，若在 <code>form</code> 表单提交时，为 \`\`method<code>设置了其他请求方式的字符 串（</code>put<code>或</code> delete<code>），则按照默认的请求方式</code> get\` 处理。</p><p>若要发送 <code>put</code> 和<code>delete</code> 请求，则需要通过 <code>spring</code>提供的过滤器 <code>HiddenHttpMethodFilter</code></p><h3 id="_3-3-params-属性" tabindex="-1">3.3 params 属性 <a class="header-anchor" href="#_3-3-params-属性" aria-label="Permalink to &quot;3.3 params 属性&quot;">​</a></h3><blockquote><p>作用 ： <code>@RequestMapping</code> 注解的 <code>params</code> 属性通过请求的<strong>请求参数</strong>匹配请求映射</p></blockquote><p><code>@RequestMapping</code> 注解的<code>params</code> 属性是一个<strong>字符串类型的数组</strong>，可以通过<strong>四种表达式</strong>设置请求参数 和请求映射的匹配关系</p><ul><li><ol><li><code>&quot;param&quot;</code>：要求请求映射所匹配的请求<strong>必须</strong>携带 <code>param</code> 请求参数</li></ol></li><li><ol start="2"><li><code>&quot;!param&quot;</code>：要求请求映射所匹配的请求<strong>必须不能</strong>携带 <code>param</code> 请求参数</li></ol></li><li><ol start="3"><li><code>&quot;param=value&quot;</code>：要求请求映射所匹配的请求<strong>必须</strong>携带 <code>param</code> 请求参数<strong>且</strong> <code>param=value</code></li></ol></li><li><ol start="4"><li><code>&quot;param!=value&quot;</code>：要求请求映射所匹配的请求<strong>必须</strong>携带 <code>param</code> 请求参数<strong>但是</strong> <code>param!=value</code></li></ol></li></ul><h4 id="案例-1" tabindex="-1">案例 1 <a class="header-anchor" href="#案例-1" aria-label="Permalink to &quot;案例 1&quot;">​</a></h4><p><code>http://localhost:8080/springmvc_helloworld/home?password=123456&amp;username</code>(可以访问)</p><p>表是请求地址必须有<code>username</code>参数（值不要求）。必须要有<code>password</code>参数，且值为<code>123456</code></p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ProtalController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">value</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/home</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;">params</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">username</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">password=123456</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">protral</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="案例-2" tabindex="-1">案例 2 <a class="header-anchor" href="#案例-2" aria-label="Permalink to &quot;案例 2&quot;">​</a></h4><p><code>http://localhost:8080/springmvc_helloworld/home?password=54321</code>(可以访问)</p><p>表示请求地址不能有<code>username</code>参数。必须有<code>password</code>参数，且不能为<code>123456</code></p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ProtalController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">value</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/home</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;">params</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">!username</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">password!=123456</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">protral</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>注： 若当前请求满足<code>@RequestMapping</code> 注解的 <code>value</code> 和<code>method</code>属性，但是不满足 <code>params</code>属性，此时 页面回报错 <code>400：Parameter conditions &quot;username, password!=123456&quot; not met for actual request parameters: username={admin}, password={123456}</code></p><h3 id="_3-4-headers-属性" tabindex="-1">3.4 headers 属性 <a class="header-anchor" href="#_3-4-headers-属性" aria-label="Permalink to &quot;3.4 headers 属性&quot;">​</a></h3><blockquote><p>作用 ：<code>@RequestMapping</code> 注解的 <code>headers</code> 属性通过请求的请<strong>求头信息</strong>匹配请求映射</p></blockquote><p><code>@RequestMapping</code>注解的 <code>headers</code> 属性是一个<strong>字符串类型的数组</strong>，可以通过<strong>四种表达式</strong>设置请求头信 息和请求映射的匹配关系</p><ul><li><ol><li><code>&quot;header&quot;</code>：要求请求映射所匹配的请求<strong>必须</strong>携带 <code>header</code> 请求头信息</li></ol></li><li><ol start="2"><li><code>&quot;!header&quot;</code>：要求请求映射所匹配的请求<strong>必须不能</strong>携带 <code>header</code> 请求头信息</li></ol></li><li><ol start="3"><li><code>&quot;header=value&quot;</code>：要求请求映射所匹配的请求<strong>必须</strong>携带 <code>header</code> 请求头信息<strong>且</strong> <code>header=value</code></li></ol></li><li>3.<code>&quot;header!=value&quot;</code>：要求请求映射所匹配的请求<strong>必须</strong>携带 <code>header</code> 请求头信息<strong>且</strong> <code>header!=value</code></li></ul><p>注 ： 若当前请求满足<code>@RequestMapping</code> 注解的<code>value</code> 和 <code>method</code> 属性，但是不满足 <code>headers</code> 属性，此时页面 显示 <code>404</code> 错误，即资源未找到。</p><h4 id="案例" tabindex="-1">案例 <a class="header-anchor" href="#案例" aria-label="Permalink to &quot;案例&quot;">​</a></h4><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ProtalController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">value</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;">headers</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">referer=http://localhost:8080/springmvc_helloworld/home</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hello</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>表示<code>http://localhost:8080/springmvc_helloworld/hello</code>页面必须是<code>http://localhost:8080/springmvc_helloworld/home</code>页面跳转过来的，其它页面跳转过来会报<code>404</code></p><p>注： <code>referer</code>是浏览器请求头<code>header</code>的一个字段表示一个网页的来源。如<code>a</code>页面跳转到<code>b</code>页面，那么<code>b</code>页面的<code>referer</code>值就是<code>a</code>页面的<code>url</code>地址。</p><h2 id="_4-springmvc-支持-ant-风格的路径" tabindex="-1">4. SpringMVC 支持 ant 风格的路径 <a class="header-anchor" href="#_4-springmvc-支持-ant-风格的路径" aria-label="Permalink to &quot;4. SpringMVC 支持 ant 风格的路径&quot;">​</a></h2><p><code>Ant</code> 风格就是一种<strong>路径匹配表达式</strong>。主要用来对 <code>URI</code> 的<strong>匹配</strong>。其实跟<strong>正则表达式</strong>作用是一样的，只不过正则表达式适用面更加宽泛，<code>Ant</code>仅仅用于路径匹配。</p><h3 id="_1-ant-中的通配符有三种" tabindex="-1">1. Ant 中的通配符有三种 <a class="header-anchor" href="#_1-ant-中的通配符有三种" aria-label="Permalink to &quot;1. Ant 中的通配符有三种&quot;">​</a></h3><ul><li><ol><li><code>?</code>：表示任意的单个字符</li></ol></li><li><ol start="2"><li><code>*</code>：表示任意的 0 个或多个字符</li></ol></li><li><ol start="3"><li><code>**</code>：表示任意层数的任意目录</li></ol></li></ul><p>注 ： 注意：在使用<code>**</code>时，只能使用<code>/**/xxx</code>的方式</p><p><code>*</code> 和 <code>**</code> 是有<strong>冲突</strong>的情况存在的。为了解决这种冲突就规定了<strong>最长匹配原则</strong><code>(has more characters)</code>。 一旦一个<code>uri</code>同时符合两个<code>Ant</code>匹配，那么走匹配规则字符最多的。为什么走最长？，因为字符越长信息越多就越具体。比如 ·/ant/a/path· 同时满足 <code>/**/path</code> 和 <code>/ant/*/path</code> 那么走<code>/ant/*/path</code></p><h3 id="_2-通配符案例" tabindex="-1">2. 通配符案例 <a class="header-anchor" href="#_2-通配符案例" aria-label="Permalink to &quot;2. 通配符案例&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">通配符</th><th style="text-align:left;">示例</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>?</code></td><td style="text-align:left;"><code>/ant/p?ttern</code></td><td style="text-align:left;">匹配项目根路径下 <code>/ant/pattern</code> 和 <code>/ant/pXttern</code>,但是不包括<code>/ant/pttern</code></td></tr><tr><td style="text-align:left;"><code>*</code></td><td style="text-align:left;"><code>/ant/*.html</code></td><td style="text-align:left;">匹配项目根路径下所有在<code>ant</code> 路径下的<code>.html</code> 文件</td></tr><tr><td style="text-align:left;"><code>*</code></td><td style="text-align:left;"><code>/ant/*/path</code></td><td style="text-align:left;"><code>/ant/path</code>、<code>/ant/a/path</code>、<code>/ant/bxx/path</code> 都匹配，不匹配 <code>/ant/axx/bxx/path</code></td></tr><tr><td style="text-align:left;"><code>**</code></td><td style="text-align:left;"><code>/ant/**/path</code></td><td style="text-align:left;"><code>/ant/path</code>、<code>/ant/a/path</code>、<code>/ant/bxx/path</code> 、<code>/ant/axx/bxx/path</code>都匹配</td></tr></tbody></table><h3 id="_3-springmvc-使用-ant-风格路径-案例" tabindex="-1">3.springmvc 使用 ant 风格路径 案例 <a class="header-anchor" href="#_3-springmvc-使用-ant-风格路径-案例" aria-label="Permalink to &quot;3.springmvc 使用 ant 风格路径 案例&quot;">​</a></h3><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ProtalController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">value</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/hello/*/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testAnt</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><code>http://localhost:8080/springmvc_helloworld/hello/aa/</code>路径能访问<code>hello</code>页面，<code>http://localhost:8080/springmvc_helloworld/hello/bb/</code>路径也能访问</p><h2 id="_5-springmvc-支持路径中的占位符-restful-风格-重点" tabindex="-1">5. SpringMVC 支持路径中的占位符（RESTful 风格，重点） <a class="header-anchor" href="#_5-springmvc-支持路径中的占位符-restful-风格-重点" aria-label="Permalink to &quot;5. SpringMVC 支持路径中的占位符（RESTful 风格，重点）&quot;">​</a></h2><h3 id="_1-概念" tabindex="-1">1. 概念 <a class="header-anchor" href="#_1-概念" aria-label="Permalink to &quot;1. 概念&quot;">​</a></h3><p><code>SpringMVC</code> 路径中的占位符常用于 <code>RESTful</code> 风格中。</p><p>当请求路径中将某些<strong>数据</strong>通过<strong>路径的方式</strong>传输到<strong>服务器</strong>中，就可以在相应的<code>@RequestMapping</code>注解的 <code>value</code> 属性中通过占位符<code>{xxx}</code>表示传输的数据。再通过<code>@PathVariable</code> 注解，将<strong>占位符</strong>所表示的<strong>数据</strong>赋值给控制器方法的<strong>形参</strong>。</p><ul><li><ol><li>原始方式：<code>/deleteUser?id=1</code></li></ol></li><li><ol start="2"><li>RESTful 风格方式：<code>/user/delete/1</code></li></ol></li></ul><h3 id="_2-测试" tabindex="-1">2. 测试 <a class="header-anchor" href="#_2-测试" aria-label="Permalink to &quot;2. 测试&quot;">​</a></h3><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">th:href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@{/testRest/1/admin}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">测试路径中的占位符--&gt;/testRest</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;&lt;</span><span style="color:#F07178;">br</span><span style="color:#89DDFF;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/testRest/{id}/{username}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testRest</span><span style="color:#89DDFF;">(@</span><span style="color:#C792EA;">PathVariable</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> id</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">PathVariable</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">username</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> username</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">  System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">+</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,username:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">username</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//最终输出的内容为--&gt;id:1,username:admin</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,75),p=[e];function t(r,c,i,D,d,y){return a(),n("div",null,p)}const C=s(o,[["render",t]]);export{u as __pageData,C as default};
