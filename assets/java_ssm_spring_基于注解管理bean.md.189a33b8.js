import{_ as s,o as a,c as n,V as l}from"./chunks/framework.364d6ed5.js";const C=JSON.parse('{"title":"基于注解管理bean","description":"","frontmatter":{"title":"基于注解管理bean","date":"2022-10-23T18:33:15.000Z","permalink":"/pages/bae0b3/","categories":["java","ssm","spring"],"tags":[null]},"headers":[],"relativePath":"java/ssm/spring/基于注解管理bean.md","filePath":"java/ssm/spring/基于注解管理bean.md","lastUpdated":1691139845000}'),e={name:"java/ssm/spring/基于注解管理bean.md"},o=l(`<h1 id="基于注解管理bean" tabindex="-1">基于注解管理bean <a class="header-anchor" href="#基于注解管理bean" aria-label="Permalink to &quot;基于注解管理bean&quot;">​</a></h1><h2 id="_1-注解" tabindex="-1">1. 注解 <a class="header-anchor" href="#_1-注解" aria-label="Permalink to &quot;1. 注解&quot;">​</a></h2><p>和 <code>XML</code>配置文件一样，注解本身并不能执行，注解本身仅仅只是做一个<strong>标记</strong>，具体的功能是框架检测 到注解标记的位置，然后针对这个位置按照注解标记的功能来执行具体操作。</p><p>本质上：所有一切的操作都是<code>Java</code>代码来完成的，<code>XML</code>和注解只是告诉框架中的<code>Java</code>代码如何执行。</p><h2 id="_2-注解的作用位置" tabindex="-1">2. 注解的作用位置 <a class="header-anchor" href="#_2-注解的作用位置" aria-label="Permalink to &quot;2. 注解的作用位置&quot;">​</a></h2><p>注解作用在<strong>类</strong>上面，<strong>方法</strong>上面，<strong>属性</strong>上面</p><h2 id="_3-根据注解创建bean对象" tabindex="-1">3. 根据注解创建Bean对象 <a class="header-anchor" href="#_3-根据注解创建bean对象" aria-label="Permalink to &quot;3. 根据注解创建Bean对象&quot;">​</a></h2><ul><li><ol><li><code>@Component</code> : 将类标识为普通组件</li></ol></li><li><ol start="2"><li><code>@Service</code> : 将类标识为业务层组件</li></ol></li><li><ol start="3"><li><code>@Controller</code> : 将类标识为控制层组件</li></ol></li><li><ol start="4"><li><code>@Repository</code> : 将类标识为持久层组件</li></ol></li></ul><p>上面四个注解功能是一样的，都可以用来创建 <code>bean</code> 实例</p><p><code>@Controller</code>、<code>@Service</code>、<code>@Repository</code>这三个注解只是在<code>@Component</code>注解的基础上起了三个新的名字。</p><p>对于<code>Spring</code>使用<code>IOC</code>容器管理这些组件来说<strong>没有区别</strong>。所以<code>@Controller</code>、<code>@Service</code>、<code>@Repository</code>这 三个注解只是给开发人员看的，让我们能够便于<strong>分辨组件的作用</strong>。</p><p>注意：虽然它们<strong>本质上一样</strong>，但是为了<strong>代码</strong>的<strong>可读性</strong>，为了程序结构严谨我们肯定不能随便胡乱标记。</p><h2 id="_4-注解创建bean的默认名称生成策略" tabindex="-1">4. 注解创建bean的默认名称生成策略 <a class="header-anchor" href="#_4-注解创建bean的默认名称生成策略" aria-label="Permalink to &quot;4. 注解创建bean的默认名称生成策略&quot;">​</a></h2><p>使用<code>@Component</code>、<code>@Repository</code>、<code>@Service</code>、<code>@Controller</code>等注解创建<code>bean</code>时，如果不指定<code>bean</code>名称，<code>bean</code>名称的默认规则是<strong>类名的首字母小写</strong>，如<code>UserService-&gt;userService</code>。</p><p>如果类名前<strong>两个或以上</strong>个<strong>字母都是大写</strong>，那么<code>bean</code>名称与类名一样，如<code>RBACUser - &gt;RBACUser</code>;</p><h2 id="_5-注解创建bean的获取" tabindex="-1">5. 注解创建bean的获取 <a class="header-anchor" href="#_5-注解创建bean的获取" aria-label="Permalink to &quot;5. 注解创建bean的获取&quot;">​</a></h2><p><a href="/java/ssm/spring/获取bean.html#_3-获取bean">参考地址</a></p><p>注 ： 案例上 根据<code>id</code>获取其实就是 根据<code>beanName</code>(<code>bean</code>的名称)获取。</p><h2 id="_6-扫描组件" tabindex="-1">6. 扫描组件 <a class="header-anchor" href="#_6-扫描组件" aria-label="Permalink to &quot;6. 扫描组件&quot;">​</a></h2><p><code>Spring</code> 为了知道程序员在哪些地方标记了什么注解，就需要通过扫描的方式，来进行检测。然后根据注 解进行后续操作。</p><h3 id="_1-最基本的扫描" tabindex="-1">1. 最基本的扫描 <a class="header-anchor" href="#_1-最基本的扫描" aria-label="Permalink to &quot;1. 最基本的扫描&quot;">​</a></h3><p>如果扫描多个包，可以<strong>多个包</strong>使用<strong>逗号隔开</strong>或者扫描包<strong>上层包</strong></p><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">context</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">component-scan</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">base-package</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.zhu.pojo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">context</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">component-scan</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-context-component-scan的子标签" tabindex="-1">2. context:component-scan的子标签 <a class="header-anchor" href="#_2-context-component-scan的子标签" aria-label="Permalink to &quot;2. context:component-scan的子标签&quot;">​</a></h3><p><code>context:include-filter</code>和<code>context:exclude-filter</code>都是<code>context:component-scan</code>的子标签</p><ul><li><ol><li>context:exclude-filter : 指定扫描包时要排除的类：</li></ol></li><li><ol start="2"><li>context:include-filter : 指定扫描包时，要包含的类,默认全部扫描进来,一定要先禁用掉默认过滤规则<code>use-default-filters=false</code></li></ol></li></ul><p>它们都有两个<strong>必须的属性</strong>，<code>type</code>和<code>expression</code>。</p><ul><li><ol><li>type 属性：配置<code>filter</code>的类型</li></ol><ul><li><p><code>assignable</code>:根据接口或者类</p></li><li><p><code>annotation</code>:根据注解类型</p></li><li><p><code>aspectj</code>:根据<code>AspectJ</code>表达式相匹配的类</p></li><li><p><code>custom</code>:自定义的实现了<code>org.springframework.core.type.filter.TypeFilter</code>接口的类</p></li><li><p><code>regex</code>:符合正则表达式的类</p></li></ul></li><li><ol start="2"><li><code>expression</code>: 根据<code>type</code>的不同，这个表达式的配置方式也不同。</li></ol></li></ul><h3 id="_3-案例" tabindex="-1">3. 案例 <a class="header-anchor" href="#_3-案例" aria-label="Permalink to &quot;3. 案例&quot;">​</a></h3><h4 id="_1-扫描com-zhug包-按照注解进行排除-标注-controller注解的组件不要" tabindex="-1">1.扫描<code>com.zhug</code>包，按照注解进行排除，标注<code>@Controller</code>注解的组件不要 <a class="header-anchor" href="#_1-扫描com-zhug包-按照注解进行排除-标注-controller注解的组件不要" aria-label="Permalink to &quot;1.扫描\`com.zhug\`包，按照注解进行排除，标注\`@Controller\`注解的组件不要&quot;">​</a></h4><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">context</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">component-scan</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">base-package</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.zhug</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">context</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">exclude-filter</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">annotation</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#C792EA;">expression</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">org.springframework.stereotype.Controller</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">context</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">component-scan</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-扫描com-zhug包-按照类进行排除-user类的组件不要" tabindex="-1">2. 扫描<code>com.zhug</code>包，按照类进行排除，<code>User</code>类的组件不要 <a class="header-anchor" href="#_2-扫描com-zhug包-按照类进行排除-user类的组件不要" aria-label="Permalink to &quot;2. 扫描\`com.zhug\`包，按照类进行排除，\`User\`类的组件不要&quot;">​</a></h4><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">context</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">component-scan</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">base-package</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.zhug</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">context</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">exclude-filter</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">assignable</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">expression</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.zhug.pojo.User</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">context</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">component-scan</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_3-扫描com-zhug包-按照注解扫描-要标注为-controller注解的组件" tabindex="-1">3.扫描<code>com.zhug</code>包，按照注解扫描，要标注为<code>@Controller</code>注解的组件 <a class="header-anchor" href="#_3-扫描com-zhug包-按照注解扫描-要标注为-controller注解的组件" aria-label="Permalink to &quot;3.扫描\`com.zhug\`包，按照注解扫描，要标注为\`@Controller\`注解的组件&quot;">​</a></h4><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">context</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">component-scan</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">base-package</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.zhug</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">use-default-filters</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">false</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">context</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">exclude-filter</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">annotation</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#C792EA;">expression</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">org.springframework.stereotype.Controller</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">context</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">component-scan</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>use-default-filters</code>是一个不容忽视的属性，默认值为<code>true</code>，表示默认会对<code>@Component</code>、<code>@Controller</code>、<code>@Service</code>、<code>@Reposity</code>标注的类进行扫描。<code>&lt;context:component-scan&gt;</code>先根据<code>&lt;context:exclude-filter&gt;</code>列出需要排除的<strong>黑名单</strong>，再通过<code>&lt;context:include-filter&gt;</code>列出需要包含的<strong>白名单</strong></p><h2 id="_7-组件所对应的bean的id" tabindex="-1">7.组件所对应的bean的id <a class="header-anchor" href="#_7-组件所对应的bean的id" aria-label="Permalink to &quot;7.组件所对应的bean的id&quot;">​</a></h2><p>在我们使用<code>XML</code>方式管理<code>bean</code>的时候，每个<code>bean</code>都有一个<strong>唯一标识</strong>，便于在其他地方引用。现在使用 <strong>注解</strong>后，每个组件仍然应该有一个唯一标识。</p><h4 id="_1-默认情况" tabindex="-1">1. 默认情况 <a class="header-anchor" href="#_1-默认情况" aria-label="Permalink to &quot;1. 默认情况&quot;">​</a></h4><p>类名首字母小写就是<code>bean</code>的<code>id</code>。例如：<code>UserController</code>类对应的<code>bean</code>的<code>id</code>就是<code>userController</code>。</p><h4 id="_2-自定义bean的id" tabindex="-1">2. 自定义bean的id <a class="header-anchor" href="#_2-自定义bean的id" aria-label="Permalink to &quot;2. 自定义bean的id&quot;">​</a></h4><p>可通过标识组件的注解的<code>value</code>属性设置自定义的<code>bean</code>的<code>id</code></p><p>默认为 <code>userServiceImpl</code>现在为<code>userService</code></p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Service</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">userService</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UserServiceImpl</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UserService</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_8-根据注解给bean对象注入属性" tabindex="-1">8.根据注解给Bean对象注入属性 <a class="header-anchor" href="#_8-根据注解给bean对象注入属性" aria-label="Permalink to &quot;8.根据注解给Bean对象注入属性&quot;">​</a></h2><p>根据注解注入属性有<code>@Autowired</code>，<code>@Resource</code>，<code>@Qualifier</code>，<code>@Value</code>四种常用方式</p><h3 id="_1-autowired-推荐" tabindex="-1">1. <code>@Autowired</code>（推荐） <a class="header-anchor" href="#_1-autowired-推荐" aria-label="Permalink to &quot;1. \`@Autowired\`（推荐）&quot;">​</a></h3><p><code>@Autowired</code>根据属性<strong>类型</strong>进行自动注入，有<strong>三种使用方式</strong></p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-z4tr-" id="tab-MwQ6o-5" checked="checked"><label for="tab-MwQ6o-5">标注在成员变量上</label><input type="radio" name="group-z4tr-" id="tab-LRVle9P"><label for="tab-LRVle9P">标记在构造器</label><input type="radio" name="group-z4tr-" id="tab-YnxT3AA"><label for="tab-YnxT3AA">标记在set方法上</label></div><div class="blocks"><div class="language-java active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#676E95;font-style:italic;">//  标记在成员变量上，不需要提供setXxx()方法。（推荐）</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UserService</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">UserDao</span><span style="color:#A6ACCD;"> userDao</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">service add.......</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    userDao</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 标记在构造器</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UserController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">UserService</span><span style="color:#A6ACCD;"> userService</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">UserController</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">UserService</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">userService</span><span style="color:#89DDFF;">){</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">userService </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> userService</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">saveUser</span><span style="color:#89DDFF;">(){</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">      userService</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">saveUser</span><span style="color:#89DDFF;">();</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 标记在set方法上</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UserController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">UserService</span><span style="color:#A6ACCD;"> userService</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">setUserService</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">UserService</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">userService</span><span style="color:#89DDFF;">){</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">userService </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> userService</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">saveUser</span><span style="color:#89DDFF;">(){</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">      userService</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">saveUser</span><span style="color:#89DDFF;">();</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></div></div><h3 id="_2-qualifier" tabindex="-1">2. <code>@Qualifier</code> <a class="header-anchor" href="#_2-qualifier" aria-label="Permalink to &quot;2. \`@Qualifier\`&quot;">​</a></h3><p>根据属性<strong>名称</strong>进行注入</p><p>这个<code>@Qualifier</code> 注解的使用，和上面<code>@Autowired</code> 一起使用。如<strong>一个接口有多个实现类</strong>，<code>@Autowired</code>不知道具体使用那个实现类进行注入，此时可以根据<code>@Qualifier</code>根据属性名称进行注入。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-ohnuh" id="tab-En9pfR-" checked="checked"><label for="tab-En9pfR-">接口</label><input type="radio" name="group-ohnuh" id="tab-4fKpTkR"><label for="tab-4fKpTkR">实现类1</label><input type="radio" name="group-ohnuh" id="tab-BL-v5tb"><label for="tab-BL-v5tb">实现类2</label></div><div class="blocks"><div class="language-java active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UserDao</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Repository</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UserDaoImpl</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UserDao</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dao add 1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Repository</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UserDaoImpl2</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UserDao</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dao add 2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div></div><p><code>UserDao</code>接口有<strong>两个实现类</strong>，只使用<code>@Autowired</code>按类型注入属性，<code>Spring</code>不知道具体注入按个实现类，可以使用<code>@Qualifier</code>再根据名字进行注入。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UserService</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Qualifier</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">userDaoImpl2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">UserDao</span><span style="color:#A6ACCD;"> userDao</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        userDao</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_3-resource" tabindex="-1">3.<code>@Resource</code> <a class="header-anchor" href="#_3-resource" aria-label="Permalink to &quot;3.\`@Resource\`&quot;">​</a></h3><p>可以根据属性<strong>类型</strong>注入，也可以根据属性<strong>名称</strong>注入。</p><h4 id="根据类型进行注入" tabindex="-1">根据类型进行注入 <a class="header-anchor" href="#根据类型进行注入" aria-label="Permalink to &quot;根据类型进行注入&quot;">​</a></h4><p><code>@Resource</code>不带<code>name</code>参数时是根据<strong>类型</strong>注入</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Resource</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">UserDao</span><span style="color:#A6ACCD;"> userDao</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="根据名称进行注入" tabindex="-1">根据名称进行注入 <a class="header-anchor" href="#根据名称进行注入" aria-label="Permalink to &quot;根据名称进行注入&quot;">​</a></h4><p><code>@Resource</code>带<code>name</code>参数时是根据<strong>名称</strong>注入</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Resource</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">userDaoImpl1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">UserDao</span><span style="color:#A6ACCD;"> userDao</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_4-value" tabindex="-1">4. <code>@Value</code> <a class="header-anchor" href="#_4-value" aria-label="Permalink to &quot;4. \`@Value\`&quot;">​</a></h3><p>注入普通类型属性</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Value</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">value</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> name</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_5-注意事项" tabindex="-1">5. 注意事项 <a class="header-anchor" href="#_5-注意事项" aria-label="Permalink to &quot;5. 注意事项&quot;">​</a></h3><p>根据全类名我们发现：</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">javax</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Resource</span></span>
<span class="line"><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">beans</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">factory</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Qualifier</span></span>
<span class="line"><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">beans</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">factory</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Autowired</span></span>
<span class="line"><span style="color:#A6ACCD;">org</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">beans</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">factory</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Value</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><ol><li><code>@Resource</code>不是<code>Spring</code>中的注解，是<code>java</code>的扩展包中的注解</li></ol></li><li><ol start="2"><li><code>@Qualifier</code>，<code>@Autowired</code>和<code>@Value</code>是<code>Spring</code>提供的注解</li></ol></li></ul><p>注 ： 推荐使用<code>@Autowired</code>和<code>@Qualifier</code>注解</p><h2 id="_9-全注解开发" tabindex="-1">9. 全注解开发 <a class="header-anchor" href="#_9-全注解开发" aria-label="Permalink to &quot;9. 全注解开发&quot;">​</a></h2><h3 id="_1-创建配置类-代替xml" tabindex="-1">1.创建配置类，代替xml <a class="header-anchor" href="#_1-创建配置类-代替xml" aria-label="Permalink to &quot;1.创建配置类，代替xml&quot;">​</a></h3><ul><li><ol><li><code>@Configuration</code> : 将这个类作为配置类，替代<code>xml</code>配置文件</li></ol></li><li><ol start="2"><li><code>ComponentScan</code> : 扫描包，根据注解创建<code>bean</code>对象</li></ol></li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">com</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">zhug</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">config</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ComponentScan</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">basePackages</span><span style="color:#89DDFF;">={</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.zhug.controller</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.zhug.service</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SpringConfig</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_2-测试" tabindex="-1">2 测试 <a class="header-anchor" href="#_2-测试" aria-label="Permalink to &quot;2 测试&quot;">​</a></h3><p>全注解开发，此时已经没有<code>xml</code>配置文件，所以不能使用<code>ClassPathXmlApplicationContext(&quot;bean.xml&quot;);</code>创建<code>IOC</code>容器。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TestConfig</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Test</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testService2</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//加载配置类</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">ApplicationContext</span><span style="color:#A6ACCD;"> context </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">AnnotationConfigApplicationContext</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">SpringConfig</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">UserService</span><span style="color:#A6ACCD;"> userService </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getBean</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">userService</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> UserService</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">userService</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    userService</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,78),p=[o];function r(c,t,i,D,y,d){return a(),n("div",null,p)}const A=s(e,[["render",r]]);export{C as __pageData,A as default};
