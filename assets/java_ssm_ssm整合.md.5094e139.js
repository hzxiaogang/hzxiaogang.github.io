import{_ as e,o as a,c as s,V as o}from"./chunks/framework.364d6ed5.js";const u=JSON.parse('{"title":"ssm整合","description":"","frontmatter":{"title":"ssm整合","date":"2022-10-20T22:20:17.000Z","permalink":"/pages/1b2096/","categories":["java","ssm"],"tags":[null]},"headers":[],"relativePath":"java/ssm/ssm整合.md","filePath":"java/ssm/ssm整合.md","lastUpdated":1685806707000}'),c={name:"java/ssm/ssm整合.md"},d=o('<h1 id="ssm整合" tabindex="-1">ssm整合 <a class="header-anchor" href="#ssm整合" aria-label="Permalink to &quot;ssm整合&quot;">​</a></h1><p>ContextLoaderListener： 在服务器启动的时候，加载<code>spring</code>的配置文件，来获取<code>spring</code>的<code>IOC</code>容器。</p><p>控制层交给<code>Springmvc</code>管理，<code>Service</code>的组件交给<code>Spring</code>管理</p><h2 id="_1-准备工作" tabindex="-1">1. 准备工作 <a class="header-anchor" href="#_1-准备工作" aria-label="Permalink to &quot;1. 准备工作&quot;">​</a></h2><ul><li><ol><li>使用<code>maven</code>创建<code>web</code>工程（参考搭建 <code>SpringMvc</code> 环境），工程名为<code>ssh</code></li></ol></li><li><ol start="2"><li>配置<code>maven</code>项目的核心配置文件<code>pom.xml</code></li></ol><ul><li>配置项目的打包方式为<code>war</code></li><li>导入项目开发的依赖（jar 包）</li></ul></li><li><ol start="3"><li>将项目的<code>Web Resource Directory</code>目录设置为<code>D:\\A_java\\ssh\\web</code>。（快捷键<code>Ctrl+Shift+ Alt+S</code>打开面板，<code>Facts</code>选项）</li></ol></li></ul><p><code>maven</code>核心配置文件<code>pom.xml</code>:</p><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>',7),l=[d];function t(i,r,n,m,p,_){return a(),s("div",null,l)}const v=e(c,[["render",t]]);export{u as __pageData,v as default};
