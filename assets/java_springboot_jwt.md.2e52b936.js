import{_ as s,o as n,c as a,V as l}from"./chunks/framework.364d6ed5.js";const o="/session.png",p="/token.png",u=JSON.parse('{"title":"jwt","description":"","frontmatter":{"title":"jwt","date":"2023-05-12T20:41:09.000Z","permalink":"/pages/48569c/","categories":["java","springboot"],"tags":[null]},"headers":[],"relativePath":"java/springboot/jwt.md","filePath":"java/springboot/jwt.md","lastUpdated":1702868372000}'),e={name:"java/springboot/jwt.md"},t=l('<h1 id="jwt" tabindex="-1">jwt <a class="header-anchor" href="#jwt" aria-label="Permalink to &quot;jwt&quot;">​</a></h1><h2 id="_1-跨域认证" tabindex="-1">1. 跨域认证 <a class="header-anchor" href="#_1-跨域认证" aria-label="Permalink to &quot;1. 跨域认证&quot;">​</a></h2><p>跨域认证有常用的两张方式，<code>Session</code>认证和<code>Token</code>认证</p><h2 id="_2-session认证" tabindex="-1">2. Session认证 <a class="header-anchor" href="#_2-session认证" aria-label="Permalink to &quot;2. Session认证&quot;">​</a></h2><h3 id="_1-session认证流程" tabindex="-1">1. session认证流程 <a class="header-anchor" href="#_1-session认证流程" aria-label="Permalink to &quot;1. session认证流程&quot;">​</a></h3><p>互联网服务离不开用户认证，<code>Session</code>认证一般流程如下面这样：</p><img src="'+o+'"><ul><li><ol><li>用户向服务器发送用户名和密码</li></ol></li><li><ol start="2"><li>服务器验证通过后，在当前的会话<code>（session）</code>里保存相关的数据，比如用户角色，登录时间等</li></ol></li><li><ol start="3"><li>服务器向用户返回一个<code>session_id</code>,写入用户的<code>Cookie</code></li></ol></li><li><ol start="4"><li>用户随后的每一次请求，都会通过<code>Cookie</code>将<code>session_id</code>传回服务器</li></ol></li><li><ol start="5"><li>服务器收到<code>session_id</code>，找到前期保存的数据，由此得知用户的身份</li></ol></li></ul><h3 id="_2-session认证的缺点" tabindex="-1">2. Session认证的缺点 <a class="header-anchor" href="#_2-session认证的缺点" aria-label="Permalink to &quot;2. Session认证的缺点&quot;">​</a></h3><p><code>session</code>认证的方式非常普遍，但是也存在一些问题，<strong>扩展性不好</strong>。如果是服务器集群，或者是跨域的服务导向架构，就要求<code>session</code>数据共享，每台服务器都能够读取<code>session</code>,针对这种问题一般有两种方案：</p><h4 id="_1-将session数据持久化" tabindex="-1">1. 将<code>session</code>数据持久化 <a class="header-anchor" href="#_1-将session数据持久化" aria-label="Permalink to &quot;1. 将`session`数据持久化&quot;">​</a></h4><p>将<code>session</code>数据写入数据库，或别的持久层。各种服务收到请求后，都向持久层请求数据。这种方案的优点是架构清晰，缺点是工程量比较大。</p><h4 id="_2-将数据保存在客户端" tabindex="-1">2. 将数据保存在客户端 <a class="header-anchor" href="#_2-将数据保存在客户端" aria-label="Permalink to &quot;2. 将数据保存在客户端&quot;">​</a></h4><p>另一种方案是服务器不再保存<code>session</code>数据，所有数据都保存在客户端，每次请求都会发回服务器。<code>Token</code>认证就是这种方案的一个代表。</p><h2 id="_3-token认证" tabindex="-1">3. Token认证 <a class="header-anchor" href="#_3-token认证" aria-label="Permalink to &quot;3. Token认证&quot;">​</a></h2><h3 id="_1-token认证流程" tabindex="-1">1. token认证流程 <a class="header-anchor" href="#_1-token认证流程" aria-label="Permalink to &quot;1. token认证流程&quot;">​</a></h3><p><code>Token</code>是在服务端产生的一串字符串，是客户端访问资源接口（<code>API</code>）时所需要的<strong>资源凭证</strong>，流程如下： <img src="'+p+`"></p><ul><li><ol><li>客户端使用用户名和密码请求登录，服务的接收到请求，去验证用户名和密码</li></ol></li><li><ol start="2"><li>验证成功后，服务端会签发一个<code>token</code>并将这个<code>token</code>发送给客户端</li></ol></li><li><ol start="3"><li>客户端收到<code>token</code>以后，会把它存储起来，比如放在<code>cookie</code>里或者<code>localStorage</code>里</li></ol></li><li><ol start="4"><li>客户端每次向服务端请求资源的时候都会在<code>HTTP请求头</code>携带服务端签发的<code>token</code></li></ol></li><li><ol start="5"><li>服务端收到请求，然后去验证客户端请求里面带着的<code>token</code>,如果验证成功，就向客户端返回请求的数据。</li></ol></li></ul><h3 id="_2-token认证特点" tabindex="-1">2.token认证特点 <a class="header-anchor" href="#_2-token认证特点" aria-label="Permalink to &quot;2.token认证特点&quot;">​</a></h3><ul><li><ol><li>基于<code>token</code>的用户认证是一种<strong>服务端无状态的认证方式</strong>，服务端不用存放<code>token</code>数据</li></ol></li><li><ol start="2"><li>用解析<code>token</code>的计算时间换取<code>session</code>的存储空间，从而减轻服务器的压力，减少频繁的查询数据库</li></ol></li><li><ol start="3"><li><code>token</code>完全由应用管理，所以它可以避开<strong>同源策略</strong></li></ol></li></ul><h2 id="_4-jwt" tabindex="-1">4. JWT <a class="header-anchor" href="#_4-jwt" aria-label="Permalink to &quot;4. JWT&quot;">​</a></h2><h3 id="_1-jwt简介" tabindex="-1">1. JWT简介 <a class="header-anchor" href="#_1-jwt简介" aria-label="Permalink to &quot;1. JWT简介&quot;">​</a></h3><ul><li><ol><li><code>JSON Web Token</code> (简称<code>JWT</code>)是一个<code>token</code>的具体实现方式，是目前最流行的跨域认证解决方案。</li></ol></li><li><ol start="2"><li><code>JWT</code>的原理是，服务器认证后，生成一个<code>JSON</code>对象，发回给用户，具体如下：</li></ol></li></ul><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">姓名</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">张三</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">角色</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">管理员</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">到期时间</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2099年7月1日0点0分</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><ol start="3"><li>用户与服务端通信的时候，都会发回这个<code>JSON</code>对象。服务器完全靠这个对象认定用户身份</li></ol></li><li><ol start="4"><li>为了防止用户篡改数据，服务器在生成这个对象的时候，会加上<strong>签名</strong></li></ol></li></ul><h3 id="_2-jwt组成" tabindex="-1">2. JWT组成 <a class="header-anchor" href="#_2-jwt组成" aria-label="Permalink to &quot;2. JWT组成&quot;">​</a></h3><p><code>JWT</code>由<strong>三部分组成</strong>，依次如下：</p><ul><li><ol><li><code>Header</code>（头部）</li></ol></li><li><ol start="2"><li><code>Payload</code>(负载)</li></ol></li><li><ol start="3"><li><code>Signature</code>(签名)</li></ol></li></ul><p>三部分最终会组合成完整的字符串，中间使用<code>.</code>分割，如下：</p><p><code>Header.Payload.Signature</code></p><h4 id="_1-header" tabindex="-1">1. Header <a class="header-anchor" href="#_1-header" aria-label="Permalink to &quot;1. Header&quot;">​</a></h4><p><code>Header</code>部分是一个<code>JSON</code>对象，描述<code>JWT</code>的元数据：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">alg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">HS256</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">JWT</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><ol><li><code>alg</code>属性表示签名的算法(<code>algorithm</code>)，默认是<code>HMAC SHA256</code> (写成<code>HS256</code>)</li></ol></li><li><ol start="2"><li><code>typ</code> 属性表示这个令牌（<code>token</code>）的类型（<code>type</code>）,<code>JWT</code>令牌统一写成<code>JWT</code></li></ol></li><li><ol start="3"><li>最后，将上面的<code>JSON</code>对象使用<code>Base64URI</code>算法转换成字符串</li></ol></li></ul><h4 id="_2-payload" tabindex="-1">2. Payload <a class="header-anchor" href="#_2-payload" aria-label="Permalink to &quot;2. Payload&quot;">​</a></h4><p><code>Payload</code>部分也是一个<code>JSON</code>对象，用来存放实际需要传递的数据，<code>JWT</code>规定了<code>7</code>个官方字段，供选用。这个<code>JSON</code>对象也是使用<code>Base64URI</code>算法转换成字符串</p><ul><li><ol><li><code>iss</code>(issuer) :签发人</li></ol></li><li><ol start="2"><li><code>exp</code>(expiration time) : 过期时间</li></ol></li><li><ol start="3"><li><code>sub</code> (subject) : 主题</li></ol></li><li><ol start="4"><li><code>aud</code> (audience) : 受众</li></ol></li><li><ol start="5"><li><code>nbf</code> (Not Before) : 生效时间</li></ol></li><li><ol start="6"><li><code>iat</code> (Issued At) : 签发时间</li></ol></li><li><ol start="7"><li><code>jti</code>(JWT ID) : 编号</li></ol></li></ul><h4 id="_3-signature" tabindex="-1">3. Signature <a class="header-anchor" href="#_3-signature" aria-label="Permalink to &quot;3. Signature&quot;">​</a></h4><p><code>Signature</code>部分是对前两部分的签名，防止数据篡改。</p><ul><li><ol><li>首先，需要指定一个密钥<code>(secret)</code>。这个密钥<strong>只有服务器知道</strong>，不能泄露给用户</li></ol></li><li><ol start="2"><li>然后，使用<code>Header</code>里面指定的签名算法（默认是<code>HMAC SHA256</code>）,按照下面的公式产生签名</li></ol></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">HMACSHA256</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">base64UrlEncode</span><span style="color:#A6ACCD;">(header) </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">base64UrlEncode</span><span style="color:#A6ACCD;">(payload)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    secret</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="_5-jwt的实现" tabindex="-1">5. JWT的实现 <a class="header-anchor" href="#_5-jwt的实现" aria-label="Permalink to &quot;5. JWT的实现&quot;">​</a></h2><p>封装jwt工具类</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">JwtUtil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 盐值</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">final</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> SECURITY_KEY </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">f.tL3^4eds@#@Syb5</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//  JWT 有效时间 30分钟</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">final</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> expirationTime </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">30</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 创建token</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * uuid 可以让每次生成的token都不一样</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createToken</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">username</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">id</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">long</span><span style="color:#A6ACCD;"> currentTime </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> System</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">currentTimeMillis</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// JWT签发时间</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">Date</span><span style="color:#A6ACCD;"> issuedAt </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">currentTime</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// JWT过期时间</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">Date</span><span style="color:#A6ACCD;"> expiration </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">currentTime </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> JwtUtil</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">expirationTime</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">JwtBuilder</span><span style="color:#A6ACCD;"> jwtBuilder </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Jwts</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">builder</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setSubject</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">username</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setIssuedAt</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">issuedAt</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 设置签发时间</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setExpiration</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">expiration</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//设置过期时间</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">claim</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">userId</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> id</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 用户id在jwt中</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">claim</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">uuid</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> RandomStringUtils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">randomAlphabetic</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 用户uuid在jwt中</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">signWith</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">SignatureAlgorithm</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">HS256</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> SECURITY_KEY</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> jwtBuilder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">compact</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 解析token，解析失败(过期，用户名和密码不对等)则获取不到UUID</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Integer</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">parseToken</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">token</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C792EA;">Claims</span><span style="color:#A6ACCD;"> claims </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Claims</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> Jwts</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parser</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">setSigningKey</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">SECURITY_KEY</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">parse</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">token</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">getBody</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Integer</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> claims</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">uuid</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ExpiredJwtException</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">MalformedJwtException</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">SignatureException</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">IllegalArgumentException</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h2 id="_6-使用jwt并校验" tabindex="-1">6. 使用jwt并校验 <a class="header-anchor" href="#_6-使用jwt并校验" aria-label="Permalink to &quot;6. 使用jwt并校验&quot;">​</a></h2><p>我们可以自定义拦截器，在拦截器中获取<code>token</code>，然后解析<code>token</code>，如果解析成功，则放行，如果解析失败，则返回自定义异常(<code>BusinessException</code>)。</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Slf4j</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">JwtInterceptor</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HandlerInterceptor</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">JwtUtil</span><span style="color:#A6ACCD;"> jwtUtil</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">boolean</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">preHandle</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">HttpServletRequest</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">request</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">HttpServletResponse</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">handler</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> token </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> request</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getHeader</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">X-Commnet-Token</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">进入拦截器-----------{}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> token</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">token </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BusinessException</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">token不存在</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">Integer</span><span style="color:#A6ACCD;"> userId </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> jwtUtil</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parseToken</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">token</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">userId </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BusinessException</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">token 已过期</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">postHandle</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">HttpServletRequest</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">request</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">HttpServletResponse</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">handler</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Nullable</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ModelAndView</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">modelAndView</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">控制器执行完毕-----------{}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">afterCompletion</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">HttpServletRequest</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">request</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">HttpServletResponse</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">handler</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Nullable</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">ex</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">得到返回结果-----------{}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div>`,47),c=[t];function r(i,D,y,A,C,F){return n(),a("div",null,c)}const b=s(e,[["render",r]]);export{u as __pageData,b as default};
