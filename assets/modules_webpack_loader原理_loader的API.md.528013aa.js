import{_ as t,o as e,c as a,V as l}from"./chunks/framework.364d6ed5.js";const y=JSON.parse('{"title":"loader的API","description":"","frontmatter":{"title":"loader的API","date":"2022-07-12T14:54:11.000Z","permalink":"/pages/f53599/","categories":["modules","webpack","原理","loader原理"],"tags":[null]},"headers":[],"relativePath":"modules/webpack/loader原理/loader的API.md","filePath":"modules/webpack/loader原理/loader的API.md","lastUpdated":1685623283000}'),s={name:"modules/webpack/loader原理/loader的API.md"},r=l('<table><thead><tr><th style="text-align:left;">方法名</th><th style="text-align:center;">含义</th><th style="text-align:center;">用法</th></tr></thead><tbody><tr><td style="text-align:left;">this.async</td><td style="text-align:center;">异步回调 loader。返回 this.callback</td><td style="text-align:center;">const callback = this.async()</td></tr><tr><td style="text-align:left;">this.callback</td><td style="text-align:center;">可以同步或者异步调用的并返回多个结果的函数</td><td style="text-align:center;">his.callback(err, content, sourceMap?, meta?)</td></tr><tr><td style="text-align:left;">this.getOptions(schema)</td><td style="text-align:center;">获取 loader 的 options</td><td style="text-align:center;">this.getOptions(schema)</td></tr><tr><td style="text-align:left;">this.emitFile</td><td style="text-align:center;">产生一个文件</td><td style="text-align:center;">this.emitFile(name, content, sourceMap)</td></tr><tr><td style="text-align:left;">this.utils.contextify</td><td style="text-align:center;">返回一个相对路径</td><td style="text-align:center;">返回一个相对路径</td></tr><tr><td style="text-align:left;">this.utils.absolutify</td><td style="text-align:center;">返回一个绝对路径</td><td style="text-align:center;">this.utils.absolutify(context, request)</td></tr></tbody></table><p>更多文档，请查阅 <a href="https://webpack.docschina.org/api/loaders/#the-loader-context" target="_blank" rel="noreferrer">webpack 官方 loader api 文档</a></p>',2),d=[r];function n(i,c,o,h,p,g){return e(),a("div",null,d)}const x=t(s,[["render",n]]);export{y as __pageData,x as default};
