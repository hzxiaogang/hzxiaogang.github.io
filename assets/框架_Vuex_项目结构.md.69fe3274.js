import{_ as s,o as n,c as a,V as l}from"./chunks/framework.364d6ed5.js";const D=JSON.parse('{"title":"项目结构","description":"","frontmatter":{"title":"项目结构","date":"2021-12-10T16:20:00.000Z","permalink":"/pages/6d37cb/","categories":["框架","Vuex"],"tags":[null]},"headers":[],"relativePath":"框架/Vuex/项目结构.md","filePath":"框架/Vuex/项目结构.md","lastUpdated":1685623283000}'),p={name:"框架/Vuex/项目结构.md"},e=l(`<p>Vuex 并不限制我们的代码结构，但是，它规定了一些需要遵守的规则：</p><h4 id="_1-应用层级的状态应该集中到单个-store-对象中" tabindex="-1">1. 应用层级的状态应该集中到单个 store 对象中 <a class="header-anchor" href="#_1-应用层级的状态应该集中到单个-store-对象中" aria-label="Permalink to &quot;1. 应用层级的状态应该集中到单个 store 对象中&quot;">​</a></h4><h4 id="_2-提交-mutation-是更改状态的唯一方法-并且这个过程是同步的" tabindex="-1">2. 提交 mutation 是更改状态的唯一方法，并且这个过程是同步的 <a class="header-anchor" href="#_2-提交-mutation-是更改状态的唯一方法-并且这个过程是同步的" aria-label="Permalink to &quot;2. 提交 mutation 是更改状态的唯一方法，并且这个过程是同步的&quot;">​</a></h4><h4 id="_3-异步逻辑应该分装到-action-里面" tabindex="-1">3. 异步逻辑应该分装到 action 里面 <a class="header-anchor" href="#_3-异步逻辑应该分装到-action-里面" aria-label="Permalink to &quot;3. 异步逻辑应该分装到 action 里面&quot;">​</a></h4><p>只要我们遵守意识规则，我们可以随意组织代码。如果 store 文件太大，只需将<code>action</code>，<code>mutation</code>，和<code>getter</code> 分割到单独的文件。</p><p>对于大型应用，我们希望把 Vuex 相关代码分割到模块中。下面是项目结构示例：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.html</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">main.js</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">api</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">...</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 抽取出API请求</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">components</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">App.vue</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">...</span></span>
<span class="line"><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">store</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.js</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;font-style:italic;"># 我们组装模块并导出 store 的地方</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">actions.js</span><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 跟级别的  action  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mutations.js</span><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;"># 跟级别的 mutation</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">modules</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cart.js</span><span style="color:#A6ACCD;">       </span><span style="color:#676E95;font-style:italic;"># 购物车模块</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">products.js</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;"># 产品模块</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>`,7),o=[e];function t(c,r,i,C,y,A){return n(),a("div",null,o)}const b=s(p,[["render",t]]);export{D as __pageData,b as default};
