import{_ as a,o as e,c as r,V as t}from"./chunks/framework.364d6ed5.js";const q=JSON.parse('{"title":"总结1","description":"","frontmatter":{"title":"总结1","date":"2022-01-14T15:49:39.000Z","permalink":"/pages/dbceb3/","categories":["知识碎片"],"tags":[null]},"headers":[],"relativePath":"知识碎片/总结1.md","filePath":"知识碎片/总结1.md","lastUpdated":1685623283000}'),o={name:"知识碎片/总结1.md"},i=t('<h2 id="_1-介绍下原型链" tabindex="-1">1.介绍下原型链 <a class="header-anchor" href="#_1-介绍下原型链" aria-label="Permalink to &quot;1.介绍下原型链&quot;">​</a></h2><h2 id="_2-介绍下构造函数是是什" tabindex="-1">2.介绍下构造函数是是什 <a class="header-anchor" href="#_2-介绍下构造函数是是什" aria-label="Permalink to &quot;2.介绍下构造函数是是什&quot;">​</a></h2><h2 id="_3-typeof-和-instanceof-的区别" tabindex="-1">3.typeof 和 instanceof 的区别 <a class="header-anchor" href="#_3-typeof-和-instanceof-的区别" aria-label="Permalink to &quot;3.typeof 和 instanceof 的区别&quot;">​</a></h2><h2 id="_4-js-中基本类型和引用类型在内存上的" tabindex="-1">4.js 中基本类型和引用类型在内存上的 <a class="header-anchor" href="#_4-js-中基本类型和引用类型在内存上的" aria-label="Permalink to &quot;4.js 中基本类型和引用类型在内存上的&quot;">​</a></h2><h2 id="_5-描述-nan-指的是什么" tabindex="-1">5. 描述 NaN 指的是什么 <a class="header-anchor" href="#_5-描述-nan-指的是什么" aria-label="Permalink to &quot;5. 描述 NaN 指的是什么&quot;">​</a></h2><h2 id="_6-描述-null" tabindex="-1">6.描述 null <a class="header-anchor" href="#_6-描述-null" aria-label="Permalink to &quot;6.描述 null&quot;">​</a></h2><h2 id="_7-什么是包装对象" tabindex="-1">7.什么是包装对象 <a class="header-anchor" href="#_7-什么是包装对象" aria-label="Permalink to &quot;7.什么是包装对象&quot;">​</a></h2><h2 id="_8-class-和-function-的区别" tabindex="-1">8.class 和 function 的区别 <a class="header-anchor" href="#_8-class-和-function-的区别" aria-label="Permalink to &quot;8.class 和 function 的区别&quot;">​</a></h2><h2 id="_9-实现继承的几种方式" tabindex="-1">9. 实现继承的几种方式 <a class="header-anchor" href="#_9-实现继承的几种方式" aria-label="Permalink to &quot;9. 实现继承的几种方式&quot;">​</a></h2><h2 id="_10-谈一谈作用域链机制" tabindex="-1">10.谈一谈作用域链机制 <a class="header-anchor" href="#_10-谈一谈作用域链机制" aria-label="Permalink to &quot;10.谈一谈作用域链机制&quot;">​</a></h2><h2 id="_11-let-var-const-的区别" tabindex="-1">11.let，var，const 的区别 <a class="header-anchor" href="#_11-let-var-const-的区别" aria-label="Permalink to &quot;11.let，var，const 的区别&quot;">​</a></h2><h2 id="_12-数据属性和访问器属性的区别" tabindex="-1">12.数据属性和访问器属性的区别 <a class="header-anchor" href="#_12-数据属性和访问器属性的区别" aria-label="Permalink to &quot;12.数据属性和访问器属性的区别&quot;">​</a></h2><h2 id="_13-tostring-和-valueof-有什么区别" tabindex="-1">13.toString 和 valueOf()有什么区别 <a class="header-anchor" href="#_13-tostring-和-valueof-有什么区别" aria-label="Permalink to &quot;13.toString 和 valueOf()有什么区别&quot;">​</a></h2><h2 id="_14-箭头函数有没有-arguments-对象" tabindex="-1">14.箭头函数有没有 arguments 对象 <a class="header-anchor" href="#_14-箭头函数有没有-arguments-对象" aria-label="Permalink to &quot;14.箭头函数有没有 arguments 对象&quot;">​</a></h2><h2 id="_15-精度丢失问题" tabindex="-1">15.精度丢失问题 <a class="header-anchor" href="#_15-精度丢失问题" aria-label="Permalink to &quot;15.精度丢失问题&quot;">​</a></h2><h2 id="_16-tofixed-可以做到四舍五入吗" tabindex="-1">16.toFixed 可以做到四舍五入吗 <a class="header-anchor" href="#_16-tofixed-可以做到四舍五入吗" aria-label="Permalink to &quot;16.toFixed 可以做到四舍五入吗&quot;">​</a></h2><h2 id="_17-js-中不同进制怎么转换" tabindex="-1">17.js 中不同进制怎么转换 <a class="header-anchor" href="#_17-js-中不同进制怎么转换" aria-label="Permalink to &quot;17.js 中不同进制怎么转换&quot;">​</a></h2><h2 id="_18-js-处理二进制有了解吗" tabindex="-1">18.js 处理二进制有了解吗 <a class="header-anchor" href="#_18-js-处理二进制有了解吗" aria-label="Permalink to &quot;18.js 处理二进制有了解吗&quot;">​</a></h2><h2 id="_19-异步有哪些解决方案" tabindex="-1">19.异步有哪些解决方案 <a class="header-anchor" href="#_19-异步有哪些解决方案" aria-label="Permalink to &quot;19.异步有哪些解决方案&quot;">​</a></h2><h2 id="_20-简单介绍-generator" tabindex="-1">20.简单介绍 Generator <a class="header-anchor" href="#_20-简单介绍-generator" aria-label="Permalink to &quot;20.简单介绍 Generator&quot;">​</a></h2><h2 id="_21-讲一讲-promise" tabindex="-1">21.讲一讲 Promise <a class="header-anchor" href="#_21-讲一讲-promise" aria-label="Permalink to &quot;21.讲一讲 Promise&quot;">​</a></h2><h2 id="_22-co-库的执行原理" tabindex="-1">22.co 库的执行原理 <a class="header-anchor" href="#_22-co-库的执行原理" aria-label="Permalink to &quot;22.co 库的执行原理&quot;">​</a></h2><h2 id="_23-介绍浏览器的事件循环" tabindex="-1">23.介绍浏览器的事件循环 <a class="header-anchor" href="#_23-介绍浏览器的事件循环" aria-label="Permalink to &quot;23.介绍浏览器的事件循环&quot;">​</a></h2><h2 id="_24-介绍下模块化方案" tabindex="-1">24.介绍下模块化方案 <a class="header-anchor" href="#_24-介绍下模块化方案" aria-label="Permalink to &quot;24.介绍下模块化方案&quot;">​</a></h2><h2 id="_25-垃圾回收机制" tabindex="-1">25.垃圾回收机制 <a class="header-anchor" href="#_25-垃圾回收机制" aria-label="Permalink to &quot;25.垃圾回收机制&quot;">​</a></h2><h2 id="_26-什么是严格模式" tabindex="-1">26.什么是严格模式 <a class="header-anchor" href="#_26-什么是严格模式" aria-label="Permalink to &quot;26.什么是严格模式&quot;">​</a></h2><h2 id="_27-map-和-weekmap-的区别" tabindex="-1">27.map 和 weekMap 的区别 <a class="header-anchor" href="#_27-map-和-weekmap-的区别" aria-label="Permalink to &quot;27.map 和 weekMap 的区别&quot;">​</a></h2><h2 id="_28-string-和-array-有哪些常用函数" tabindex="-1">28.String 和 Array 有哪些常用函数 <a class="header-anchor" href="#_28-string-和-array-有哪些常用函数" aria-label="Permalink to &quot;28.String 和 Array 有哪些常用函数&quot;">​</a></h2><h2 id="_29-判断数组的几种方法" tabindex="-1">29.判断数组的几种方法 <a class="header-anchor" href="#_29-判断数组的几种方法" aria-label="Permalink to &quot;29.判断数组的几种方法&quot;">​</a></h2><h2 id="_30-循环有几种-是否支持中断-默认情况下是否支持-async-await" tabindex="-1">30.循环有几种，是否支持中断，默认情况下是否支持 async/await <a class="header-anchor" href="#_30-循环有几种-是否支持中断-默认情况下是否支持-async-await" aria-label="Permalink to &quot;30.循环有几种，是否支持中断，默认情况下是否支持 async/await&quot;">​</a></h2><h2 id="_31-闭包的使用场景举例" tabindex="-1">31.闭包的使用场景举例 <a class="header-anchor" href="#_31-闭包的使用场景举例" aria-label="Permalink to &quot;31.闭包的使用场景举例&quot;">​</a></h2><h2 id="_32-扩展运算符" tabindex="-1">32.扩展运算符 <a class="header-anchor" href="#_32-扩展运算符" aria-label="Permalink to &quot;32.扩展运算符&quot;">​</a></h2><h2 id="_33-线程和进程分别是什么" tabindex="-1">33.线程和进程分别是什么 <a class="header-anchor" href="#_33-线程和进程分别是什么" aria-label="Permalink to &quot;33.线程和进程分别是什么&quot;">​</a></h2><h2 id="_34-了解函数式编程-面向对象编程吗" tabindex="-1">34.了解函数式编程，面向对象编程吗 <a class="header-anchor" href="#_34-了解函数式编程-面向对象编程吗" aria-label="Permalink to &quot;34.了解函数式编程，面向对象编程吗&quot;">​</a></h2><h2 id="_35-什么是尾递归" tabindex="-1">35.什么是尾递归 <a class="header-anchor" href="#_35-什么是尾递归" aria-label="Permalink to &quot;35.什么是尾递归&quot;">​</a></h2><h2 id="_36-观察者模式-发布-订阅模式的区别" tabindex="-1">36.观察者模式，发布-订阅模式的区别 <a class="header-anchor" href="#_36-观察者模式-发布-订阅模式的区别" aria-label="Permalink to &quot;36.观察者模式，发布-订阅模式的区别&quot;">​</a></h2><h2 id="_37-websocket" tabindex="-1">37.websocket <a class="header-anchor" href="#_37-websocket" aria-label="Permalink to &quot;37.websocket&quot;">​</a></h2>',37),h=[i];function l(n,s,d,c,_,u){return e(),r("div",null,h)}const f=a(o,[["render",l]]);export{q as __pageData,f as default};
