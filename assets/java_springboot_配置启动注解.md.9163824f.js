import{_ as s,o as n,c as a,V as o}from"./chunks/framework.364d6ed5.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"java/springboot/配置启动注解.md","filePath":"java/springboot/配置启动注解.md","lastUpdated":1685984990000}'),l={name:"java/springboot/配置启动注解.md"},p=o(`<h2 id="_1-springbootapplication" tabindex="-1">1. @SpringBootApplication <a class="header-anchor" href="#_1-springbootapplication" aria-label="Permalink to &quot;1. @SpringBootApplication&quot;">​</a></h2><p><code>@SpringBootApplication</code>是<code>Springboot</code>项目的启动注解</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Target</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ElementType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TYPE</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Retention</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">RetentionPolicy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RUNTIME</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Documented</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Inherited</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SpringBootConfiguration</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">EnableAutoConfiguration</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ComponentScan</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">excludeFilters</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Filter</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> FilterType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CUSTOM</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">classes</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> TypeExcludeFilter</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Filter</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> FilterType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CUSTOM</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">classes</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> AutoConfigurationExcludeFilter</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">SpringBootApplication</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ... 此处省略源码</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>查看源码可以发现<code>@SpringBootApplication</code>是一个复合注解，包含了<code>@SpringBootConfiguration</code>,<code>@EnableAutoConfiguration</code>和<code>@ComponentScan</code> 这三个注解</p><h3 id="_1-springbootconfiguration" tabindex="-1">1. @SpringBootConfiguration <a class="header-anchor" href="#_1-springbootconfiguration" aria-label="Permalink to &quot;1. @SpringBootConfiguration&quot;">​</a></h3><ul><li><ol><li>源码</li></ol></li></ul><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Target</span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;">ElementType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TYPE</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Retention</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">RetentionPolicy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RUNTIME</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Documented</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Indexed</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">SpringBootConfiguration</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">AliasFor</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">annotation</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Configuration</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">boolean</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">proxyBeanMethods</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><code>@SpringBootConfiguration</code>继承自<code>@Configuration</code>，二者的功能也一致，<strong>标注当前类是配置类，并将当前类内声明的一个或多个以<code>@Bean</code>注解标记的方法的实例纳入到<code>Spring</code>容器中，并且实例名就是方法名</strong>。<code>SpringBoot</code>推荐使用<code>@SpringBootConfiguration</code></p><ul><li><ol start="2"><li>案例</li></ol></li></ul><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-R5owo" id="tab-W7Rt0Wd" checked="checked"><label for="tab-W7Rt0Wd">MyConfig.java</label><input type="radio" name="group-R5owo" id="tab-JFZDnvJ"><label for="tab-JFZDnvJ">EvcssSpringbootApplication.java</label></div><div class="blocks"><div class="language-java active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyConfig</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">Map</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">myMap</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">Map</span><span style="color:#A6ACCD;"> map </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">HashMap</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">put</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">张三</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">put</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">22</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;">  map</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SpringBootApplication</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">EvcssSpringbootApplication</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 获取 IOC容器</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">ConfigurableApplicationContext</span><span style="color:#A6ACCD;"> run </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">          SpringApplication</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">MainApplication</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> args</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">Map</span><span style="color:#A6ACCD;"> map </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Map</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> run</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getBean</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">myMap</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">map</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// {name=张三, age=22}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></div></div><h3 id="_2-enableautoconfiguration" tabindex="-1">2. @EnableAutoConfiguration <a class="header-anchor" href="#_2-enableautoconfiguration" aria-label="Permalink to &quot;2. @EnableAutoConfiguration&quot;">​</a></h3><p><strong>开启自动配置功能</strong>。<code>@EnableAutoConfiguration</code>可以帮助<code>SpringBoot</code>应用将所有符合条件的<code>@Configuration</code>配置都加载到当前<code>SpringBoot</code>创建并使用的<code>IOC</code>容器中。</p><h3 id="_3-componentscan" tabindex="-1">3. @ComponentScan <a class="header-anchor" href="#_3-componentscan" aria-label="Permalink to &quot;3. @ComponentScan&quot;">​</a></h3><p><code>@ComponentScan</code>注解的功能就是：<strong>自动扫描并加载符合条件的组件或<code>bean</code>定义到<code>IOC</code>容器</strong>。我们可以通过<code>basePackages</code>等属性指定<code>@ComponentScan</code>自动扫描的范围，如果不指定，则<code>Spring</code>框架从声明<code>@ComponentScan</code>所在类的<code>package</code>进行扫描。默认情况下是不指定的，所以<code>SpringBoot</code>的启动类最好放在<code>root package</code>下。</p><h2 id="_2-conditional" tabindex="-1">2. @Conditional <a class="header-anchor" href="#_2-conditional" aria-label="Permalink to &quot;2. @Conditional&quot;">​</a></h2><p>这个注解就比较牛逼了，<code>SpringBoot</code>基本就是靠它来实现的。然后它衍生出来了下面一些注解：</p><h3 id="_1-conditionalonbean" tabindex="-1">1. @ConditionalOnBean <a class="header-anchor" href="#_1-conditionalonbean" aria-label="Permalink to &quot;1. @ConditionalOnBean&quot;">​</a></h3><p>配置了某个特定的<code>bean</code></p><h3 id="_2-conditionalonmissingbean" tabindex="-1">2. @ConditionalOnMissingBean <a class="header-anchor" href="#_2-conditionalonmissingbean" aria-label="Permalink to &quot;2. @ConditionalOnMissingBean&quot;">​</a></h3><p>没有配置特定的<code>bean</code></p><h3 id="_3-conditionalonclass" tabindex="-1">3. @ConditionalOnClass <a class="header-anchor" href="#_3-conditionalonclass" aria-label="Permalink to &quot;3. @ConditionalOnClass&quot;">​</a></h3><p><code>classpath</code>里指定的类</p><h3 id="_4-conditionalonmissingclass" tabindex="-1">4. @ConditionalOnMissingClass <a class="header-anchor" href="#_4-conditionalonmissingclass" aria-label="Permalink to &quot;4. @ConditionalOnMissingClass&quot;">​</a></h3><p><code>classpath</code>里没有指定的类</p><h3 id="_5-conditionalonexpression" tabindex="-1">5. @ConditionalOnExpression <a class="header-anchor" href="#_5-conditionalonexpression" aria-label="Permalink to &quot;5. @ConditionalOnExpression&quot;">​</a></h3><p>给定的<code>SpEl</code>表达式计算结果为<code>true</code></p><h3 id="_6-conditionalonjava" tabindex="-1">6. @ConditionalOnJava <a class="header-anchor" href="#_6-conditionalonjava" aria-label="Permalink to &quot;6. @ConditionalOnJava&quot;">​</a></h3><p><code>Java</code>的版本匹配特定值或一个范围</p><h3 id="_7-conditionalonjndi" tabindex="-1">7. @ConditionalOnJndi <a class="header-anchor" href="#_7-conditionalonjndi" aria-label="Permalink to &quot;7. @ConditionalOnJndi&quot;">​</a></h3><p>参数给定的<code>JNDI</code>位置必须存在一个，如果没有给参数，则要有<code>JNDI InitialContext</code></p><h3 id="_8-conditionalonproperty" tabindex="-1">8. @ConditionalOnProperty <a class="header-anchor" href="#_8-conditionalonproperty" aria-label="Permalink to &quot;8. @ConditionalOnProperty&quot;">​</a></h3><p>指定的配置属性要有一个明确的值</p><h3 id="_9-conditionalonresource" tabindex="-1">9. @ConditionalOnResource <a class="header-anchor" href="#_9-conditionalonresource" aria-label="Permalink to &quot;9. @ConditionalOnResource&quot;">​</a></h3><p><code>classpath</code>里没有指定的资源</p><h3 id="_10-conditionalonwebapplication" tabindex="-1">10. @ConditionalOnWebApplication <a class="header-anchor" href="#_10-conditionalonwebapplication" aria-label="Permalink to &quot;10. @ConditionalOnWebApplication&quot;">​</a></h3><p>这是一个web程序</p><h3 id="_11-conditionalonnotwebapplication" tabindex="-1">11. @ConditionalOnNotWebApplication <a class="header-anchor" href="#_11-conditionalonnotwebapplication" aria-label="Permalink to &quot;11. @ConditionalOnNotWebApplication&quot;">​</a></h3><p>这不是一个web应用程序</p>`,38),e=[p];function t(c,r,i,D,C,y){return n(),a("div",null,e)}const d=s(l,[["render",t]]);export{A as __pageData,d as default};
