import{_ as s,o as n,c as a,V as l}from"./chunks/framework.364d6ed5.js";const u=JSON.parse('{"title":"JS和JSON的区别","description":"","frontmatter":{"title":"JS和JSON的区别","date":"2022-01-14T15:49:39.000Z","permalink":"/pages/efe278/","categories":["知识碎片"],"tags":[null]},"headers":[],"relativePath":"知识碎片/JS和JSON的区别.md","filePath":"知识碎片/JS和JSON的区别.md","lastUpdated":1685623283000}'),p={name:"知识碎片/JS和JSON的区别.md"},e=l(`<p>JSON 只是一种数据格式，<strong>JSON 不属于任何一种编程语言</strong>。但是大家（如 Java，C++等）都可以使用 JSON 这种数据格式来进行<strong>数据的传输</strong>。</p><p>比如说下面的 JS 对象</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">道恩强森</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">height</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">195cm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">weight</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">118kg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>可以转化为 JOSN 格式</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">道恩强森</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">height</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">195cm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">weight</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">118kg</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>C++把 JSON 内容转化为自己能处理的数据存储格式，这样我们就不用担心不同语言有不同的语法和数据存储方式了。既然 JSON 是一种数据格式，也就是 类似于 txt 格式的文件一样，所以我们可以主动创建 JSON 文件并输入内容。</p><p>JSON 文件数据格式要求如下：</p><table><thead><tr><th style="text-align:left;"></th><th style="text-align:center;">JSON</th><th style="text-align:center;">JavaScript 对象</th></tr></thead><tbody><tr><td style="text-align:left;">键名</td><td style="text-align:center;">必须双引号</td><td style="text-align:center;">双引号，单引号或者无引号。</td></tr><tr><td style="text-align:left;">键名对应的值</td><td style="text-align:center;">必须双引号</td><td style="text-align:center;">双引号，单引号或者反引号</td></tr><tr><td style="text-align:left;">数据类型</td><td style="text-align:center;">没有 undefined，NaN，infinity 和函数。可以是 string，number，boolean，object({})</td><td style="text-align:center;">多种类型都有</td></tr><tr><td style="text-align:left;">逗号</td><td style="text-align:center;">最后一个键名对应的值不能有</td><td style="text-align:center;">最后一个可以加上</td></tr><tr><td style="text-align:left;">0.</td><td style="text-align:center;">不行</td><td style="text-align:center;">可以上</td></tr></tbody></table><p>如果不是 JSON 规范的数据格式，那么在进行 JSON 数据转换的时候就会丢失。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">张三</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">alert</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">name</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">age</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">Infinity,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NaN,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">children</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> []</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">wify</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined,</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> json </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">(JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(obj))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   name: &quot;张山&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   height: null,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   age: null,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   children: [],</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>上面的结果中，因为 JOSN 没有 undefined，NaN，infinity 和函数这些数据格式，所以解析的时候会丢失。JOSN 是一种数据格式，跟语言无关，一些语言特有的数据类型就会被 JSON 忽略掉。比如 js 的函数类型，其他语言很难转换存储，所以解析的时候直接被 jSON 忽略。</p>`,11),t=[e];function o(r,c,i,y,D,F){return n(),a("div",null,t)}const C=s(p,[["render",o]]);export{u as __pageData,C as default};
