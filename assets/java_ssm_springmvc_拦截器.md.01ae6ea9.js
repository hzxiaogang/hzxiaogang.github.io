import{_ as s,o as n,c as a,V as l}from"./chunks/framework.364d6ed5.js";const C=JSON.parse('{"title":"拦截器","description":"","frontmatter":{"title":"拦截器","date":"2022-10-18T21:27:04.000Z","permalink":"/pages/3dba00/","categories":["java","ssm","springmvc"],"tags":[null]},"headers":[],"relativePath":"java/ssm/springmvc/拦截器.md","filePath":"java/ssm/springmvc/拦截器.md","lastUpdated":1685806707000}'),o={name:"java/ssm/springmvc/拦截器.md"},p=l(`<h1 id="拦截器" tabindex="-1">拦截器 <a class="header-anchor" href="#拦截器" aria-label="Permalink to &quot;拦截器&quot;">​</a></h1><h2 id="_1-拦截器的功能" tabindex="-1">1. 拦截器的功能 <a class="header-anchor" href="#_1-拦截器的功能" aria-label="Permalink to &quot;1. 拦截器的功能&quot;">​</a></h2><p><code>SpringMVC</code> 中的拦截器用于<strong>拦截控制器方法</strong>的<strong>执行</strong></p><h2 id="_2-实现拦截器" tabindex="-1">2. 实现拦截器 <a class="header-anchor" href="#_2-实现拦截器" aria-label="Permalink to &quot;2. 实现拦截器&quot;">​</a></h2><p><code>SpringMVC</code>实现拦截器需要两个步骤</p><ul><li><ol><li>创建一个类实现 HandlerInterceptor 接口</li></ol></li><li><ol start="2"><li>在 SpringMVC 的配置文件中进行配置：</li></ol></li></ul><h3 id="_2-1-实现-handlerinterceptor-接口" tabindex="-1">2.1 实现 HandlerInterceptor 接口 <a class="header-anchor" href="#_2-1-实现-handlerinterceptor-接口" aria-label="Permalink to &quot;2.1 实现 HandlerInterceptor 接口&quot;">​</a></h3><p>创建包<code>interceptor</code>，然后在包里创建类<code>FirstInterceptor</code>实现（<code>implements</code>）拦截器接口（<code>HandlerInterceptor</code>）。</p><p>实现完接口的类，如果没有重写接口中的方法类会报错，可时我们的类<code>FirstInterceptor</code>并没有报错，有以下三种原因：</p><ul><li><ol><li>接口中没有抽象方法</li></ol></li><li><ol start="2"><li>有抽象方法，但是用<code>static</code> 修饰的</li></ol></li><li><ol start="3"><li>有抽象方法，但是有方法体</li></ol></li></ul><p>进入<code>HandlerInterceptor</code>接口会发现，里面有<code>preHandle</code>，<code>postHandle</code>，<code>afterCompletion</code>三个方法，且都有方法体。所以<code>FirstInterceptor</code>没报错。</p><p>现在我们<strong>重写</strong>这三个方法。我们用快捷键（<code>Ctrl+O(字母)</code>）打开接口面板。选择三个接口。代码如下：</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">FirstInterceptor</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HandlerInterceptor</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">boolean</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">preHandle</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">HttpServletRequest</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">request</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">HttpServletResponse</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">handler</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">FirstInterceptor----&gt; preHandle</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">postHandle</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">HttpServletRequest</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">request</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">HttpServletResponse</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">handler</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ModelAndView</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">modelAndView</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">FirstInterceptor----&gt; postHandle</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">afterCompletion</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">HttpServletRequest</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">request</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">HttpServletResponse</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">handler</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">ex</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">FirstInterceptor----&gt; afterCompletion</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="_2-2-配置-springmvc-配置文件" tabindex="-1">2.2 配置 springMvc 配置文件 <a class="header-anchor" href="#_2-2-配置-springmvc-配置文件" aria-label="Permalink to &quot;2.2 配置 springMvc 配置文件&quot;">​</a></h3><p>在 <code>springMvc</code> 配置文件中，配置拦截器，有两种方法。一种是<code>bean</code>标签，另一种是<code>ref</code>标签（基于注解）</p><h4 id="_1-bean-标签" tabindex="-1">1. bean 标签 <a class="header-anchor" href="#_1-bean-标签" aria-label="Permalink to &quot;1. bean 标签&quot;">​</a></h4><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">interceptors</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">interceptor</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">mapping</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">path</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/**</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">bean</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.zhug.interceptor.FirstInterceptor</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">bean</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">exclude-mapping</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">path</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/testRequestEntity</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">interceptor</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">interceptors</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="_2-ref-标签" tabindex="-1">2. ref 标签 <a class="header-anchor" href="#_2-ref-标签" aria-label="Permalink to &quot;2. ref 标签&quot;">​</a></h4><p>该方法需是基于注解，自动装配<code>bean</code>。所以需要有两个其它配置</p><ul><li><ol><li>在<code>springMvc</code>配置文件<strong>开启</strong>自动扫描包<code>&lt;context:component-scan base-package=&quot;com.zhug&quot;/&gt;</code></li></ol></li><li><ol start="2"><li>给实现<code>HandlerInterceptor</code>接口的类<code>FirstInterceptor</code>添加<code>@Component</code>注解</li></ol></li></ul><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">interceptors</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">interceptor</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">mapping</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">path</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/**</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">ref</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">bean</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">firstInterceptor</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">ref</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">exclude-mapping</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">path</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/testRequestEntity</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">interceptor</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">interceptors</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>此时，一个完整的拦截器就实现好了。启动<code>tomcat</code>，访问首页。我们会发现实现的拦截器的三个方法<code>preHandle</code>，<code>postHandle</code>，<code>afterCompletion</code>会依次执行。三个方法内的打印内容出打印在<code>idea</code>控制台。</p><p>以上两种配置方式都是对 <code>DispatcherServlet</code> 所处理的所有的<strong>请求</strong>进行<strong>拦截</strong>。</p><h2 id="_3-拦截器配置文件讲解" tabindex="-1">3. 拦截器配置文件讲解 <a class="header-anchor" href="#_3-拦截器配置文件讲解" aria-label="Permalink to &quot;3. 拦截器配置文件讲解&quot;">​</a></h2><h3 id="_1-mvc-mapping-标签" tabindex="-1">1. <code>&lt;mvc:mapping&gt;</code>标签 <a class="header-anchor" href="#_1-mvc-mapping-标签" aria-label="Permalink to &quot;1. \`&lt;mvc:mapping&gt;\`标签&quot;">​</a></h3><p>通过<code>mvc:mapping</code>设置需要拦截的请求，<code>path</code>属性表示拦截的路径。</p><ul><li>1.<code>path=&quot;/**&quot;</code></li></ul><p>表示对所有路径进行拦截</p><ul><li>2.<code>path=&quot;/*&quot;</code></li></ul><p>表示<strong>只</strong>拦截<strong>一层</strong>路径。如会拦截<code>/a</code>，但是不会拦截<code>/a/b</code>。</p><h3 id="_2-mvc-exclude-mapping标签" tabindex="-1">2. <code>mvc:exclude-mapping</code>标签 <a class="header-anchor" href="#_2-mvc-exclude-mapping标签" aria-label="Permalink to &quot;2. \`mvc:exclude-mapping\`标签&quot;">​</a></h3><p>设置需要排除的请求，即<strong>不</strong>需要<strong>拦截</strong>的<strong>请求</strong>，<code>path</code>属性表示不需要拦截的路径</p><h3 id="_3-过-ref-或-bean-标签" tabindex="-1">3. 过 ref 或 bean 标签 <a class="header-anchor" href="#_3-过-ref-或-bean-标签" aria-label="Permalink to &quot;3. 过 ref 或 bean 标签&quot;">​</a></h3><p>通过 <code>ref</code> 或 <code>bean</code>标签设置拦截器的具体实现类。</p><h2 id="_4-拦截器中的三个方法" tabindex="-1">4. 拦截器中的三个方法 <a class="header-anchor" href="#_4-拦截器中的三个方法" aria-label="Permalink to &quot;4. 拦截器中的三个方法&quot;">​</a></h2><h3 id="_4-1-prehandle" tabindex="-1">4.1 preHandle <a class="header-anchor" href="#_4-1-prehandle" aria-label="Permalink to &quot;4.1 preHandle&quot;">​</a></h3><p>表示在<strong>控制器方法</strong>执行<strong>之前执行</strong> <code>preHandle()</code>，其 <code>boolean</code> 类型的返回值表示<strong>拦截</strong>或<strong>放行</strong>，返 回 <code>true</code> 为<strong>放行</strong>，即调用控制器方法；返回 <code>false</code> 表示<strong>拦截</strong>，即不调用控制器方法</p><h3 id="_4-2-posthandle" tabindex="-1">4.2 postHandle <a class="header-anchor" href="#_4-2-posthandle" aria-label="Permalink to &quot;4.2 postHandle&quot;">​</a></h3><p>表示在<strong>控制器方法</strong>执行<strong>之后执行</strong> <code>postHandle()</code></p><h3 id="_4-3-aftercompletion" tabindex="-1">4.3 afterCompletion <a class="header-anchor" href="#_4-3-aftercompletion" aria-label="Permalink to &quot;4.3 afterCompletion&quot;">​</a></h3><p>表示在处理完<strong>视图</strong>和<strong>模型数据</strong>，渲染视图完毕之后执行 <code>afterCompletion()</code></p><h2 id="_5-多个拦截器的执行顺序" tabindex="-1">5. 多个拦截器的执行顺序 <a class="header-anchor" href="#_5-多个拦截器的执行顺序" aria-label="Permalink to &quot;5. 多个拦截器的执行顺序&quot;">​</a></h2><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">interceptors</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">interceptor</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">mapping</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">path</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">ref</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">bean</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">firstInterceptor</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">ref</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">exclude-mapping</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">path</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/testRequestEntity1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">interceptor</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">interceptor</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">mapping</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">path</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/**</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">ref</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">bean</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">firstInterceptor</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">ref</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">exclude-mapping</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">path</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/testRequestEntity2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">interceptor</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">mvc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">interceptors</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>我们可以在<code>mvc:interceptors</code>中配置多个<code>mvc:interceptor</code>，表示配置多个拦截器。多个拦截器执行顺序有以下两种情况：</p><h4 id="_5-1-若每个拦截器的-prehandle-都返回-true" tabindex="-1">5.1 若每个拦截器的 preHandle()都返回 true <a class="header-anchor" href="#_5-1-若每个拦截器的-prehandle-都返回-true" aria-label="Permalink to &quot;5.1 若每个拦截器的 preHandle()都返回 true&quot;">​</a></h4><p>此时多个拦截器的执行顺序和拦截器在 <code>SpringMVC</code> 的配置文件的<strong>配置顺序有关</strong>：</p><p><code>preHandle()</code>会按照配置的<strong>顺序执行</strong>，而 <code>postHandle</code>()和 <code>afterCompletion()</code>会按照配置的<strong>反序执行</strong></p><h4 id="_5-2-若某个拦截器的-prehandle-返回了-false" tabindex="-1">5.2 若某个拦截器的 preHandle()返回了 false <a class="header-anchor" href="#_5-2-若某个拦截器的-prehandle-返回了-false" aria-label="Permalink to &quot;5.2 若某个拦截器的 preHandle()返回了 false&quot;">​</a></h4><p><code>preHandle()</code>返回 <code>false</code> 和它之前的拦截器的 <code>preHandle()</code>都会执行，<code>postHandle()</code>都不执行，返回 <code>false</code> 的拦截器之前的拦截器的 <code>afterCompletion()</code>会执行</p>`,49),e=[p];function t(r,c,D,F,y,i){return n(),a("div",null,e)}const A=s(o,[["render",t]]);export{C as __pageData,A as default};
