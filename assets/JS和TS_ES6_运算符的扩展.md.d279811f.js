import{_ as s,o as a,c as n,V as l}from"./chunks/framework.364d6ed5.js";const F=JSON.parse('{"title":"运算符的扩展","description":"","frontmatter":{"title":"运算符的扩展","date":"2022-01-06T17:07:01.000Z","permalink":"/pages/36a6f1/","categories":["JS和TS","ES6"],"tags":[null]},"headers":[],"relativePath":"JS和TS/ES6/运算符的扩展.md","filePath":"JS和TS/ES6/运算符的扩展.md","lastUpdated":1685623283000}'),p={name:"JS和TS/ES6/运算符的扩展.md"},e=l(`<h2 id="_1-指数运算符" tabindex="-1">1. 指数运算符 <a class="header-anchor" href="#_1-指数运算符" aria-label="Permalink to &quot;1. 指数运算符&quot;">​</a></h2><p>ES2016 新增加了一个指数运算符（<code>**</code>）</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">**</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 4</span></span>
<span class="line"><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">**</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 8</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>它的特点是<strong>边结合</strong>，而不是常见的<strong>左结合</strong>。多个指数运算符连用时，是从最右边开始计算的。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">**</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">**</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 512</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 相当于</span></span>
<span class="line"><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">**</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 512</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>指数运算符</strong>可以和<strong>等号</strong>结合，形成新的赋值运算符 （<code>**=</code>）</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">**=</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 等同于 a= a*a</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">b </span><span style="color:#89DDFF;">**=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 等同于 ： b= b * b * b</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_2-链判断运算符" tabindex="-1">2. 链判断运算符 <a class="header-anchor" href="#_2-链判断运算符" aria-label="Permalink to &quot;2. 链判断运算符&quot;">​</a></h2><p>符号： <code>?.</code></p><p>链判断运算符<code>?.</code>有三种写法。</p><ul><li><ol><li>obj?.prop : 对象的属性是否存在</li></ol></li><li><ol start="2"><li>obj?.[&#39;prop&#39;] : 对象的属性是否存在</li></ol></li><li><ol start="3"><li>func?.(...args) : 函数或对象方法是否存在</li></ol></li></ul><p>特点：</p><ul><li><ol><li>短路机制 ： 只要不满足条件，就不再往下执行，且返回<code>undefined</code></li></ol></li></ul><p>直接在链式调用的时候判断，左侧的对象是否为<code>null</code>或<code>undefined</code>，如果是，就不再往下运算，而是返回<code>undefined</code></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> firstName </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> message</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">body</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">firstName </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">default</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>iterator.return</code>如果有定义，就会调用该方法，否则<code>iterator.return</code>直接返回<code>undefined</code>，不再执行<code>?.</code>后面的部分</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">iterator</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">return</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_3-null判断运算符" tabindex="-1">3. Null判断运算符 <a class="header-anchor" href="#_3-null判断运算符" aria-label="Permalink to &quot;3. Null判断运算符&quot;">​</a></h2><p>符号：<code>??</code> 作用 ：符号左边的值为<code>null</code>或<code>undefined</code>则返回符号右边的值否则返回符号左边的值</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">222</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">22</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>??</code>本质上是逻辑运算，它与其他两个逻辑运算符<code>&amp;&amp;</code>和<code>||</code>有一个优先级问题。现在的规则是，如果多个逻辑运算符一起使用，必须用<strong>括号</strong>表明优先级，否则会报错。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 报错</span></span>
<span class="line"><span style="color:#A6ACCD;">lhs </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> middle </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> rhs</span></span>
<span class="line"><span style="color:#A6ACCD;">lhs </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> middle </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> rhs</span></span>
<span class="line"><span style="color:#A6ACCD;">lhs </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> middle </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> rhs</span></span>
<span class="line"><span style="color:#A6ACCD;">lhs </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> middle </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> rhs</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 正确</span></span>
<span class="line"><span style="color:#A6ACCD;">(lhs </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> middle) </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> rhs</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">lhs </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> (middle </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> rhs)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">(lhs </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> middle) </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> rhs</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">lhs </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> (middle </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> rhs)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">(lhs </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> middle) </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> rhs</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">lhs </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> (middle </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> rhs)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">(lhs </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> middle) </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> rhs</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">lhs </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> (middle </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> rhs)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="_4-赋值运算符" tabindex="-1">4. 赋值运算符 <a class="header-anchor" href="#_4-赋值运算符" aria-label="Permalink to &quot;4. 赋值运算符&quot;">​</a></h2><p>ES2021 引入了三个新的<code>逻辑赋值运算符</code>（logical assignment operators），<code>将逻辑运算符</code>与<code>赋值</code>运算符进行结合。</p><p>它的作用是： 为变量或属性设置默认值</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 或赋值运算符</span></span>
<span class="line"><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">||=</span><span style="color:#A6ACCD;"> y  </span><span style="color:#676E95;font-style:italic;">// 等同于 : x || ( x = y)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 与赋值运算符</span></span>
<span class="line"><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">&amp;&amp;=</span><span style="color:#A6ACCD;"> y </span><span style="color:#676E95;font-style:italic;">// 等同于 ： x &amp;&amp; (x = y)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Null 赋值运算符</span></span>
<span class="line"><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">??=</span><span style="color:#A6ACCD;"> y  </span><span style="color:#676E95;font-style:italic;">// 等同于 ：x ?? (x = y)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,26),o=[e];function r(c,t,i,y,D,C){return a(),n("div",null,o)}const A=s(p,[["render",r]]);export{F as __pageData,A as default};
